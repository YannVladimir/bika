{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\bika\\\\bika\\\\frontend\\\\src\\\\pages\\\\DocumentTypes\\\\DocumentTypes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Button, Grid, Card, CardContent, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControlLabel, Switch, Select, MenuItem, FormControl, InputLabel, Chip, List, ListItem, ListItemText, ListItemSecondaryAction, Divider, CircularProgress, Alert } from \"@mui/material\";\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, AddCircle as AddCircleIcon } from \"@mui/icons-material\";\nimport { tokens } from \"../../theme/theme\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { documentTypeService } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentTypesPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n\n  // State\n  const [documentTypes, setDocumentTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingDocType, setEditingDocType] = useState(null);\n  const [newField, setNewField] = useState({\n    name: \"\",\n    fieldType: \"TEXT\",\n    required: false\n  });\n  const [newOption, setNewOption] = useState(\"\");\n\n  // Load document types on component mount\n  useEffect(() => {\n    loadDocumentTypes();\n  }, [user]);\n  const loadDocumentTypes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (user !== null && user !== void 0 && user.companyId) {\n        const data = await documentTypeService.getDocumentTypesByCompany(user.companyId);\n        setDocumentTypes(data);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error loading document types:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to load document types');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateNew = () => {\n    if (!(user !== null && user !== void 0 && user.companyId)) {\n      setError('Company information is required');\n      return;\n    }\n    setEditingDocType({\n      name: \"\",\n      code: \"\",\n      description: \"\",\n      companyId: user.companyId,\n      fields: [],\n      isActive: true\n    });\n    setOpenDialog(true);\n  };\n  const handleEdit = docType => {\n    setEditingDocType(docType);\n    setOpenDialog(true);\n  };\n  const handleSave = async () => {\n    if (!editingDocType) return;\n    try {\n      setError(null);\n\n      // Basic validation\n      if (!editingDocType.name.trim()) {\n        setError('Document type name is required');\n        return;\n      }\n      if (!editingDocType.code.trim()) {\n        setError('Document type code is required');\n        return;\n      }\n\n      // Ensure display order is set for fields\n      const fieldsWithOrder = editingDocType.fields.map((field, index) => ({\n        ...field,\n        displayOrder: field.displayOrder || index + 1,\n        fieldKey: field.fieldKey || documentTypeService.generateFieldKey(field.name)\n      }));\n      const documentTypeData = {\n        ...editingDocType,\n        fields: fieldsWithOrder\n      };\n      if (editingDocType.id) {\n        // Update existing\n        await documentTypeService.updateDocumentType(editingDocType.id, documentTypeData);\n      } else {\n        // Create new\n        await documentTypeService.createDocumentType(documentTypeData);\n      }\n      setOpenDialog(false);\n      setEditingDocType(null);\n      await loadDocumentTypes();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error saving document type:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to save document type');\n    }\n  };\n  const handleDelete = async docType => {\n    if (!docType.id) return;\n    if (window.confirm(`Are you sure you want to delete \"${docType.name}\"?`)) {\n      try {\n        await documentTypeService.deleteDocumentType(docType.id);\n        await loadDocumentTypes();\n      } catch (err) {\n        var _err$response3, _err$response3$data;\n        setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to delete document type');\n      }\n    }\n  };\n  const handleAddField = () => {\n    if (editingDocType && newField.name) {\n      const field = {\n        name: newField.name,\n        fieldKey: documentTypeService.generateFieldKey(newField.name),\n        fieldType: newField.fieldType || \"TEXT\",\n        required: newField.required || false,\n        description: newField.description,\n        active: true,\n        displayOrder: editingDocType.fields.length + 1,\n        options: newField.fieldType === \"SELECT\" ? [] : undefined\n      };\n      setEditingDocType({\n        ...editingDocType,\n        fields: [...editingDocType.fields, field]\n      });\n      setNewField({\n        name: \"\",\n        fieldType: \"TEXT\",\n        required: false\n      });\n    }\n  };\n  const handleAddOption = fieldIndex => {\n    if (editingDocType && newOption.trim()) {\n      const updatedFields = [...editingDocType.fields];\n      const field = updatedFields[fieldIndex];\n      if (field.options) {\n        field.options = [...field.options, newOption.trim()];\n      } else {\n        field.options = [newOption.trim()];\n      }\n      setEditingDocType({\n        ...editingDocType,\n        fields: updatedFields\n      });\n      setNewOption(\"\");\n    }\n  };\n  const handleDeleteField = fieldIndex => {\n    if (editingDocType) {\n      const updatedFields = editingDocType.fields.filter((_, index) => index !== fieldIndex);\n      setEditingDocType({\n        ...editingDocType,\n        fields: updatedFields\n      });\n    }\n  };\n  const handleDeleteOption = (fieldIndex, option) => {\n    if (editingDocType) {\n      const updatedFields = [...editingDocType.fields];\n      const field = updatedFields[fieldIndex];\n      if (field.options) {\n        field.options = field.options.filter(opt => opt !== option);\n      }\n      setEditingDocType({\n        ...editingDocType,\n        fields: updatedFields\n      });\n    }\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingDocType(null);\n    setNewField({\n      name: \"\",\n      fieldType: \"TEXT\",\n      required: false\n    });\n    setNewOption(\"\");\n    setError(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          ml: 2\n        },\n        children: \"Loading document types...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: 600,\n        children: \"Document Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 22\n        }, this),\n        onClick: handleCreateNew,\n        sx: {\n          fontWeight: 600,\n          boxShadow: 2\n        },\n        children: \"Create New Document Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      onClose: () => setError(null),\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: documentTypes.length === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          align: \"center\",\n          sx: {\n            py: 4\n          },\n          children: \"No document types found. Create your first document type to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this) : documentTypes.map(docType => {\n        var _docType$fields;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 3,\n            sx: {\n              background: `linear-gradient(135deg, ${tokens.primary.light} 0%, ${tokens.secondary.light} 100%)`,\n              color: tokens.grey[900],\n              borderRadius: 3,\n              height: \"100%\",\n              boxShadow: \"0 4px 24px 0 rgba(0,0,0,0.07)\",\n              transition: \"transform 0.2s\",\n              \"&:hover\": {\n                transform: \"translateY(-4px) scale(1.02)\",\n                boxShadow: \"0 8px 32px 0 rgba(0,0,0,0.12)\"\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  fontWeight: 600,\n                  children: docType.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEdit(docType),\n                    color: \"primary\",\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDelete(docType),\n                    color: \"error\",\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.primary\",\n                mb: 2,\n                children: docType.description || 'No description'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: [\"Code: \", docType.code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                display: \"block\",\n                children: [\"Fields: \", ((_docType$fields = docType.fields) === null || _docType$fields === void 0 ? void 0 : _docType$fields.length) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, docType.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingDocType !== null && editingDocType !== void 0 && editingDocType.id ? \"Edit Document Type\" : \"Create New Document Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Document Type Name\",\n                fullWidth: true,\n                required: true,\n                value: (editingDocType === null || editingDocType === void 0 ? void 0 : editingDocType.name) || \"\",\n                onChange: e => setEditingDocType(editingDocType ? {\n                  ...editingDocType,\n                  name: e.target.value\n                } : null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Code\",\n                fullWidth: true,\n                required: true,\n                value: (editingDocType === null || editingDocType === void 0 ? void 0 : editingDocType.code) || \"\",\n                onChange: e => setEditingDocType(editingDocType ? {\n                  ...editingDocType,\n                  code: e.target.value\n                } : null),\n                helperText: \"Unique identifier for the document type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Description\",\n                fullWidth: true,\n                multiline: true,\n                rows: 2,\n                value: (editingDocType === null || editingDocType === void 0 ? void 0 : editingDocType.description) || \"\",\n                onChange: e => setEditingDocType(editingDocType ? {\n                  ...editingDocType,\n                  description: e.target.value\n                } : null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Fields\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: editingDocType === null || editingDocType === void 0 ? void 0 : editingDocType.fields.map((field, fieldIndex) => {\n                  var _field$options;\n                  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: field.name,\n                        secondary: `${field.fieldType.toLowerCase()} ${field.required ? \"(Required)\" : \"\"}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          edge: \"end\",\n                          onClick: () => handleDeleteField(fieldIndex),\n                          color: \"error\",\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 417,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 412,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 411,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 23\n                    }, this), field.fieldType === \"SELECT\" && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        pl: 4,\n                        pr: 2,\n                        pb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        gap: 1,\n                        mb: 1,\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          size: \"small\",\n                          label: \"Add Option\",\n                          value: newOption,\n                          onChange: e => setNewOption(e.target.value)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 424,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"outlined\",\n                          color: \"primary\",\n                          onClick: () => handleAddOption(fieldIndex),\n                          disabled: !newOption,\n                          children: \"Add\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 430,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 423,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        gap: 0.5,\n                        flexWrap: \"wrap\",\n                        children: (_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.map(option => /*#__PURE__*/_jsxDEV(Chip, {\n                          label: option,\n                          onDelete: () => handleDeleteOption(fieldIndex, option),\n                          color: \"secondary\"\n                        }, option, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 441,\n                          columnNumber: 31\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 23\n                    }, this)]\n                  }, fieldIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  p: 2,\n                  border: `1px dashed ${tokens.grey[300]}`\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: \"Add New Field\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Field Name\",\n                      fullWidth: true,\n                      value: newField.name,\n                      onChange: e => setNewField({\n                        ...newField,\n                        name: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 3,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 478,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        value: newField.fieldType,\n                        label: \"Type\",\n                        onChange: e => setNewField({\n                          ...newField,\n                          fieldType: e.target.value\n                        }),\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"TEXT\",\n                          children: \"Text\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 486,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"TEXTAREA\",\n                          children: \"Text Area\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 487,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"NUMBER\",\n                          children: \"Number\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 488,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"DATE\",\n                          children: \"Date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 489,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"SELECT\",\n                          children: \"Select\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 490,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"CHECKBOX\",\n                          children: \"Checkbox\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 491,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"EMAIL\",\n                          children: \"Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 492,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"PHONE\",\n                          children: \"Phone\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 493,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"URL\",\n                          children: \"URL\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 494,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 3,\n                    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: newField.required,\n                        onChange: e => setNewField({\n                          ...newField,\n                          required: e.target.checked\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 27\n                      }, this),\n                      label: \"Required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"success\",\n                      onClick: handleAddField,\n                      disabled: !newField.name,\n                      fullWidth: true,\n                      startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 521,\n                        columnNumber: 36\n                      }, this),\n                      children: \"Add Field\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          color: \"inherit\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: !(editingDocType !== null && editingDocType !== void 0 && editingDocType.name) || !(editingDocType !== null && editingDocType !== void 0 && editingDocType.code),\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 24\n          }, this),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentTypesPage, \"xr8DXadd7jqPY4v1FUrt3PVtO94=\", false, function () {\n  return [useAuth];\n});\n_c = DocumentTypesPage;\nexport default DocumentTypesPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentTypesPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Grid","Card","CardContent","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControlLabel","Switch","Select","MenuItem","FormControl","InputLabel","Chip","List","ListItem","ListItemText","ListItemSecondaryAction","Divider","CircularProgress","Alert","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","AddCircle","AddCircleIcon","tokens","useAuth","documentTypeService","jsxDEV","_jsxDEV","DocumentTypesPage","_s","user","documentTypes","setDocumentTypes","loading","setLoading","error","setError","openDialog","setOpenDialog","editingDocType","setEditingDocType","newField","setNewField","name","fieldType","required","newOption","setNewOption","loadDocumentTypes","companyId","data","getDocumentTypesByCompany","err","_err$response","_err$response$data","console","response","message","handleCreateNew","code","description","fields","isActive","handleEdit","docType","handleSave","trim","fieldsWithOrder","map","field","index","displayOrder","fieldKey","generateFieldKey","documentTypeData","id","updateDocumentType","createDocumentType","_err$response2","_err$response2$data","handleDelete","window","confirm","deleteDocumentType","_err$response3","_err$response3$data","handleAddField","active","length","options","undefined","handleAddOption","fieldIndex","updatedFields","handleDeleteField","filter","_","handleDeleteOption","option","opt","handleCloseDialog","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","ml","width","boxSizing","p","mb","fontWeight","color","startIcon","onClick","boxShadow","severity","onClose","container","spacing","item","xs","align","py","_docType$fields","md","lg","elevation","background","primary","light","secondary","grey","borderRadius","height","transition","transform","size","fontSize","open","maxWidth","fullWidth","mt","sm","label","value","onChange","e","target","helperText","multiline","rows","gutterBottom","_field$options","Fragment","toLowerCase","edge","pl","pr","pb","gap","disabled","flexWrap","onDelete","border","control","checked","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/pages/DocumentTypes/DocumentTypes.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  CircularProgress,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  AddCircle as AddCircleIcon,\r\n} from \"@mui/icons-material\";\r\nimport { tokens } from \"../../theme/theme\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { documentTypeService, DocumentType, DocumentField, FieldType } from \"../../services/api\";\r\n\r\nconst DocumentTypesPage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  \r\n  // State\r\n  const [documentTypes, setDocumentTypes] = useState<DocumentType[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [editingDocType, setEditingDocType] = useState<DocumentType | null>(null);\r\n  const [newField, setNewField] = useState<Partial<DocumentField>>({\r\n    name: \"\",\r\n    fieldType: \"TEXT\",\r\n    required: false,\r\n  });\r\n  const [newOption, setNewOption] = useState(\"\");\r\n\r\n  // Load document types on component mount\r\n  useEffect(() => {\r\n    loadDocumentTypes();\r\n  }, [user]);\r\n\r\n  const loadDocumentTypes = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      if (user?.companyId) {\r\n        const data = await documentTypeService.getDocumentTypesByCompany(user.companyId);\r\n        setDocumentTypes(data);\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error loading document types:', err);\r\n      setError(err.response?.data?.message || err.message || 'Failed to load document types');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateNew = () => {\r\n    if (!user?.companyId) {\r\n      setError('Company information is required');\r\n      return;\r\n    }\r\n    \r\n    setEditingDocType({\r\n      name: \"\",\r\n      code: \"\",\r\n      description: \"\",\r\n      companyId: user.companyId,\r\n      fields: [],\r\n      isActive: true,\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleEdit = (docType: DocumentType) => {\r\n    setEditingDocType(docType);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!editingDocType) return;\r\n    \r\n    try {\r\n      setError(null);\r\n      \r\n      // Basic validation\r\n      if (!editingDocType.name.trim()) {\r\n        setError('Document type name is required');\r\n        return;\r\n      }\r\n      \r\n      if (!editingDocType.code.trim()) {\r\n        setError('Document type code is required');\r\n        return;\r\n      }\r\n\r\n      // Ensure display order is set for fields\r\n      const fieldsWithOrder = editingDocType.fields.map((field, index) => ({\r\n        ...field,\r\n        displayOrder: field.displayOrder || index + 1,\r\n        fieldKey: field.fieldKey || documentTypeService.generateFieldKey(field.name),\r\n      }));\r\n\r\n      const documentTypeData = {\r\n        ...editingDocType,\r\n        fields: fieldsWithOrder,\r\n      };\r\n\r\n      if (editingDocType.id) {\r\n        // Update existing\r\n        await documentTypeService.updateDocumentType(editingDocType.id, documentTypeData);\r\n      } else {\r\n        // Create new\r\n        await documentTypeService.createDocumentType(documentTypeData);\r\n      }\r\n      \r\n      setOpenDialog(false);\r\n      setEditingDocType(null);\r\n      await loadDocumentTypes();\r\n    } catch (err: any) {\r\n      console.error('Error saving document type:', err);\r\n      setError(err.response?.data?.message || 'Failed to save document type');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (docType: DocumentType) => {\r\n    if (!docType.id) return;\r\n    \r\n    if (window.confirm(`Are you sure you want to delete \"${docType.name}\"?`)) {\r\n      try {\r\n        await documentTypeService.deleteDocumentType(docType.id);\r\n        await loadDocumentTypes();\r\n      } catch (err: any) {\r\n        setError(err.response?.data?.message || 'Failed to delete document type');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddField = () => {\r\n    if (editingDocType && newField.name) {\r\n      const field: DocumentField = {\r\n        name: newField.name,\r\n        fieldKey: documentTypeService.generateFieldKey(newField.name),\r\n        fieldType: newField.fieldType || \"TEXT\",\r\n        required: newField.required || false,\r\n        description: newField.description,\r\n        active: true,\r\n        displayOrder: editingDocType.fields.length + 1,\r\n        options: newField.fieldType === \"SELECT\" ? [] : undefined,\r\n      };\r\n\r\n      setEditingDocType({\r\n        ...editingDocType,\r\n        fields: [...editingDocType.fields, field],\r\n      });\r\n      \r\n      setNewField({ name: \"\", fieldType: \"TEXT\", required: false });\r\n    }\r\n  };\r\n\r\n  const handleAddOption = (fieldIndex: number) => {\r\n    if (editingDocType && newOption.trim()) {\r\n      const updatedFields = [...editingDocType.fields];\r\n      const field = updatedFields[fieldIndex];\r\n      \r\n      if (field.options) {\r\n        field.options = [...field.options, newOption.trim()];\r\n      } else {\r\n        field.options = [newOption.trim()];\r\n      }\r\n\r\n      setEditingDocType({\r\n        ...editingDocType,\r\n        fields: updatedFields,\r\n      });\r\n      \r\n      setNewOption(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteField = (fieldIndex: number) => {\r\n    if (editingDocType) {\r\n      const updatedFields = editingDocType.fields.filter((_, index) => index !== fieldIndex);\r\n      setEditingDocType({\r\n        ...editingDocType,\r\n        fields: updatedFields,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteOption = (fieldIndex: number, option: string) => {\r\n    if (editingDocType) {\r\n      const updatedFields = [...editingDocType.fields];\r\n      const field = updatedFields[fieldIndex];\r\n      \r\n      if (field.options) {\r\n        field.options = field.options.filter(opt => opt !== option);\r\n      }\r\n\r\n      setEditingDocType({\r\n        ...editingDocType,\r\n        fields: updatedFields,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setEditingDocType(null);\r\n    setNewField({ name: \"\", fieldType: \"TEXT\", required: false });\r\n    setNewOption(\"\");\r\n    setError(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\r\n        <CircularProgress />\r\n        <Typography variant=\"h6\" sx={{ ml: 2 }}>Loading document types...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box width=\"100%\" boxSizing=\"border-box\" p={3}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        mb={4}\r\n      >\r\n        <Typography variant=\"h4\" fontWeight={600}>\r\n          Document Types\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleCreateNew}\r\n          sx={{ fontWeight: 600, boxShadow: 2 }}\r\n        >\r\n          Create New Document Type\r\n        </Button>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" onClose={() => setError(null)} sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid container spacing={3}>\r\n        {documentTypes.length === 0 ? (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\" sx={{ py: 4 }}>\r\n              No document types found. Create your first document type to get started.\r\n            </Typography>\r\n          </Grid>\r\n        ) : (\r\n          documentTypes.map((docType) => (\r\n            <Grid item xs={12} md={6} lg={4} key={docType.id}>\r\n              <Card\r\n                elevation={3}\r\n                sx={{\r\n                  background: `linear-gradient(135deg, ${tokens.primary.light} 0%, ${tokens.secondary.light} 100%)`,\r\n                  color: tokens.grey[900],\r\n                  borderRadius: 3,\r\n                  height: \"100%\",\r\n                  boxShadow: \"0 4px 24px 0 rgba(0,0,0,0.07)\",\r\n                  transition: \"transform 0.2s\",\r\n                  \"&:hover\": {\r\n                    transform: \"translateY(-4px) scale(1.02)\",\r\n                    boxShadow: \"0 8px 32px 0 rgba(0,0,0,0.12)\",\r\n                  },\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                    mb={2}\r\n                  >\r\n                    <Typography variant=\"h6\" fontWeight={600}>\r\n                      {docType.name}\r\n                    </Typography>\r\n                    <Box>\r\n                      <IconButton\r\n                        onClick={() => handleEdit(docType)}\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                      >\r\n                        <EditIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        onClick={() => handleDelete(docType)}\r\n                        color=\"error\"\r\n                        size=\"small\"\r\n                      >\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.primary\" mb={2}>\r\n                    {docType.description || 'No description'}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    Code: {docType.code}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                    Fields: {docType.fields?.length || 0}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        )}\r\n      </Grid>\r\n\r\n      {/* Create/Edit Dialog */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          {editingDocType?.id ? \"Edit Document Type\" : \"Create New Document Type\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 2 }}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Document Type Name\"\r\n                  fullWidth\r\n                  required\r\n                  value={editingDocType?.name || \"\"}\r\n                  onChange={(e) =>\r\n                    setEditingDocType(\r\n                      editingDocType\r\n                        ? { ...editingDocType, name: e.target.value }\r\n                        : null\r\n                    )\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Code\"\r\n                  fullWidth\r\n                  required\r\n                  value={editingDocType?.code || \"\"}\r\n                  onChange={(e) =>\r\n                    setEditingDocType(\r\n                      editingDocType\r\n                        ? { ...editingDocType, code: e.target.value }\r\n                        : null\r\n                    )\r\n                  }\r\n                  helperText=\"Unique identifier for the document type\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Description\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows={2}\r\n                  value={editingDocType?.description || \"\"}\r\n                  onChange={(e) =>\r\n                    setEditingDocType(\r\n                      editingDocType\r\n                        ? { ...editingDocType, description: e.target.value }\r\n                        : null\r\n                    )\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              {/* Fields Section */}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Fields\r\n                </Typography>\r\n                <List>\r\n                  {editingDocType?.fields.map((field, fieldIndex) => (\r\n                    <React.Fragment key={fieldIndex}>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={field.name}\r\n                          secondary={`${field.fieldType.toLowerCase()} ${\r\n                            field.required ? \"(Required)\" : \"\"\r\n                          }`}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton\r\n                            edge=\"end\"\r\n                            onClick={() => handleDeleteField(fieldIndex)}\r\n                            color=\"error\"\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                      {field.fieldType === \"SELECT\" && (\r\n                        <Box sx={{ pl: 4, pr: 2, pb: 2 }}>\r\n                          <Box display=\"flex\" gap={1} mb={1}>\r\n                            <TextField\r\n                              size=\"small\"\r\n                              label=\"Add Option\"\r\n                              value={newOption}\r\n                              onChange={(e) => setNewOption(e.target.value)}\r\n                            />\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              onClick={() => handleAddOption(fieldIndex)}\r\n                              disabled={!newOption}\r\n                            >\r\n                              Add\r\n                            </Button>\r\n                          </Box>\r\n                          <Box display=\"flex\" gap={0.5} flexWrap=\"wrap\">\r\n                            {field.options?.map((option) => (\r\n                              <Chip\r\n                                key={option}\r\n                                label={option}\r\n                                onDelete={() =>\r\n                                  handleDeleteOption(fieldIndex, option)\r\n                                }\r\n                                color=\"secondary\"\r\n                              />\r\n                            ))}\r\n                          </Box>\r\n                        </Box>\r\n                      )}\r\n                      <Divider />\r\n                    </React.Fragment>\r\n                  ))}\r\n                </List>\r\n\r\n                {/* Add New Field */}\r\n                <Box\r\n                  sx={{ mt: 2, p: 2, border: `1px dashed ${tokens.grey[300]}` }}\r\n                >\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Add New Field\r\n                  </Typography>\r\n                  <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item xs={12} sm={4}>\r\n                      <TextField\r\n                        label=\"Field Name\"\r\n                        fullWidth\r\n                        value={newField.name}\r\n                        onChange={(e) =>\r\n                          setNewField({ ...newField, name: e.target.value })\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel>Type</InputLabel>\r\n                        <Select\r\n                          value={newField.fieldType}\r\n                          label=\"Type\"\r\n                          onChange={(e) =>\r\n                            setNewField({ ...newField, fieldType: e.target.value as FieldType })\r\n                          }\r\n                        >\r\n                          <MenuItem value=\"TEXT\">Text</MenuItem>\r\n                          <MenuItem value=\"TEXTAREA\">Text Area</MenuItem>\r\n                          <MenuItem value=\"NUMBER\">Number</MenuItem>\r\n                          <MenuItem value=\"DATE\">Date</MenuItem>\r\n                          <MenuItem value=\"SELECT\">Select</MenuItem>\r\n                          <MenuItem value=\"CHECKBOX\">Checkbox</MenuItem>\r\n                          <MenuItem value=\"EMAIL\">Email</MenuItem>\r\n                          <MenuItem value=\"PHONE\">Phone</MenuItem>\r\n                          <MenuItem value=\"URL\">URL</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={newField.required}\r\n                            onChange={(e) =>\r\n                              setNewField({\r\n                                ...newField,\r\n                                required: e.target.checked,\r\n                              })\r\n                            }\r\n                          />\r\n                        }\r\n                        label=\"Required\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        onClick={handleAddField}\r\n                        disabled={!newField.name}\r\n                        fullWidth\r\n                        startIcon={<AddCircleIcon />}\r\n                      >\r\n                        Add Field\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={!editingDocType?.name || !editingDocType?.code}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DocumentTypesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import apiClient from './client';\nclass CompanyService {\n  async getCompanies(page = 0, size = 10, search) {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      size: size.toString()\n    });\n    if (search) {\n      params.append('search', search);\n    }\n    const response = await apiClient.get(`/companies?${params}`);\n    return response.data;\n  }\n  async getCompanyById(id) {\n    const response = await apiClient.get(`/companies/${id}`);\n    return response.data;\n  }\n  async createCompany(companyData) {\n    const response = await apiClient.post('/companies', companyData);\n    return response.data;\n  }\n  async updateCompany(id, companyData) {\n    const response = await apiClient.put(`/companies/${id}`, companyData);\n    return response.data;\n  }\n  async deleteCompany(id) {\n    await apiClient.delete(`/companies/${id}`);\n  }\n  async activateCompany(id) {\n    const response = await apiClient.patch(`/companies/${id}/activate`);\n    return response.data;\n  }\n  async deactivateCompany(id) {\n    const response = await apiClient.patch(`/companies/${id}/deactivate`);\n    return response.data;\n  }\n}\nconst companyService = new CompanyService();\nexport default companyService;","map":{"version":3,"names":["apiClient","CompanyService","getCompanies","page","size","search","params","URLSearchParams","toString","append","response","get","data","getCompanyById","id","createCompany","companyData","post","updateCompany","put","deleteCompany","delete","activateCompany","patch","deactivateCompany","companyService"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/services/api/companyService.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { Company, CreateCompanyRequest, PaginatedResponse } from './types';\r\n\r\nclass CompanyService {\r\n  async getCompanies(page = 0, size = 10, search?: string): Promise<PaginatedResponse<Company>> {\r\n    const params = new URLSearchParams({\r\n      page: page.toString(),\r\n      size: size.toString(),\r\n    });\r\n    \r\n    if (search) {\r\n      params.append('search', search);\r\n    }\r\n\r\n    const response = await apiClient.get<PaginatedResponse<Company>>(`/companies?${params}`);\r\n    return response.data;\r\n  }\r\n\r\n  async getCompanyById(id: number): Promise<Company> {\r\n    const response = await apiClient.get<Company>(`/companies/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async createCompany(companyData: CreateCompanyRequest): Promise<Company> {\r\n    const response = await apiClient.post<Company>('/companies', companyData);\r\n    return response.data;\r\n  }\r\n\r\n  async updateCompany(id: number, companyData: Partial<CreateCompanyRequest>): Promise<Company> {\r\n    const response = await apiClient.put<Company>(`/companies/${id}`, companyData);\r\n    return response.data;\r\n  }\r\n\r\n  async deleteCompany(id: number): Promise<void> {\r\n    await apiClient.delete(`/companies/${id}`);\r\n  }\r\n\r\n  async activateCompany(id: number): Promise<Company> {\r\n    const response = await apiClient.patch<Company>(`/companies/${id}/activate`);\r\n    return response.data;\r\n  }\r\n\r\n  async deactivateCompany(id: number): Promise<Company> {\r\n    const response = await apiClient.patch<Company>(`/companies/${id}/deactivate`);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nconst companyService = new CompanyService();\r\nexport default companyService; "],"mappings":"AAAA,OAAOA,SAAS,MAAM,UAAU;AAGhC,MAAMC,cAAc,CAAC;EACnB,MAAMC,YAAYA,CAACC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,EAAEC,MAAe,EAAuC;IAC5F,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjCJ,IAAI,EAAEA,IAAI,CAACK,QAAQ,CAAC,CAAC;MACrBJ,IAAI,EAAEA,IAAI,CAACI,QAAQ,CAAC;IACtB,CAAC,CAAC;IAEF,IAAIH,MAAM,EAAE;MACVC,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IACjC;IAEA,MAAMK,QAAQ,GAAG,MAAMV,SAAS,CAACW,GAAG,CAA6B,cAAcL,MAAM,EAAE,CAAC;IACxF,OAAOI,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,cAAcA,CAACC,EAAU,EAAoB;IACjD,MAAMJ,QAAQ,GAAG,MAAMV,SAAS,CAACW,GAAG,CAAU,cAAcG,EAAE,EAAE,CAAC;IACjE,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMG,aAAaA,CAACC,WAAiC,EAAoB;IACvE,MAAMN,QAAQ,GAAG,MAAMV,SAAS,CAACiB,IAAI,CAAU,YAAY,EAAED,WAAW,CAAC;IACzE,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMM,aAAaA,CAACJ,EAAU,EAAEE,WAA0C,EAAoB;IAC5F,MAAMN,QAAQ,GAAG,MAAMV,SAAS,CAACmB,GAAG,CAAU,cAAcL,EAAE,EAAE,EAAEE,WAAW,CAAC;IAC9E,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMQ,aAAaA,CAACN,EAAU,EAAiB;IAC7C,MAAMd,SAAS,CAACqB,MAAM,CAAC,cAAcP,EAAE,EAAE,CAAC;EAC5C;EAEA,MAAMQ,eAAeA,CAACR,EAAU,EAAoB;IAClD,MAAMJ,QAAQ,GAAG,MAAMV,SAAS,CAACuB,KAAK,CAAU,cAAcT,EAAE,WAAW,CAAC;IAC5E,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMY,iBAAiBA,CAACV,EAAU,EAAoB;IACpD,MAAMJ,QAAQ,GAAG,MAAMV,SAAS,CAACuB,KAAK,CAAU,cAAcT,EAAE,aAAa,CAAC;IAC9E,OAAOJ,QAAQ,CAACE,IAAI;EACtB;AACF;AAEA,MAAMa,cAAc,GAAG,IAAIxB,cAAc,CAAC,CAAC;AAC3C,eAAewB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
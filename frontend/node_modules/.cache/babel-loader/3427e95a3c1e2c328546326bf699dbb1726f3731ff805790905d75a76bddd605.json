{"ast":null,"code":"import React from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\n// Create a client\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: (failureCount, error) => {\n        var _error$response, _error$response2, _error$response3;\n        // Don't retry on 4xx errors except 401\n        if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) >= 400 && (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) < 500 && (error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) !== 401) {\n          return false;\n        }\n        return failureCount < 2;\n      },\n      staleTime: 5 * 60 * 1000,\n      // 5 minutes\n      refetchOnWindowFocus: false\n    },\n    mutations: {\n      retry: false\n    }\n  }\n});\nexport const QueryProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: queryClient\n  }, children);\n};\n_c = QueryProvider;\nvar _c;\n$RefreshReg$(_c, \"QueryProvider\");","map":{"version":3,"names":["React","QueryClient","QueryClientProvider","queryClient","defaultOptions","queries","retry","failureCount","error","_error$response","_error$response2","_error$response3","response","status","staleTime","refetchOnWindowFocus","mutations","QueryProvider","children","createElement","client","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/hooks/useApiQuery.ts"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\n\r\n// Create a client\r\nexport const queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      retry: (failureCount, error: any) => {\r\n        // Don't retry on 4xx errors except 401\r\n        if (error?.response?.status >= 400 && error?.response?.status < 500 && error?.response?.status !== 401) {\r\n          return false;\r\n        }\r\n        return failureCount < 2;\r\n      },\r\n      staleTime: 5 * 60 * 1000, // 5 minutes\r\n      refetchOnWindowFocus: false,\r\n    },\r\n    mutations: {\r\n      retry: false,\r\n    },\r\n  },\r\n});\r\n\r\ninterface QueryProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const QueryProvider: React.FC<QueryProviderProps> = ({ children }) => {\r\n  return React.createElement(QueryClientProvider, { client: queryClient }, children);\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;;AAExE;AACA,OAAO,MAAMC,WAAW,GAAG,IAAIF,WAAW,CAAC;EACzCG,cAAc,EAAE;IACdC,OAAO,EAAE;MACPC,KAAK,EAAEA,CAACC,YAAY,EAAEC,KAAU,KAAK;QAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;QACnC;QACA,IAAI,CAAAH,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEI,QAAQ,cAAAH,eAAA,uBAAfA,eAAA,CAAiBI,MAAM,KAAI,GAAG,IAAI,CAAAL,KAAK,aAALA,KAAK,wBAAAE,gBAAA,GAALF,KAAK,CAAEI,QAAQ,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBG,MAAM,IAAG,GAAG,IAAI,CAAAL,KAAK,aAALA,KAAK,wBAAAG,gBAAA,GAALH,KAAK,CAAEI,QAAQ,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBE,MAAM,MAAK,GAAG,EAAE;UACtG,OAAO,KAAK;QACd;QACA,OAAON,YAAY,GAAG,CAAC;MACzB,CAAC;MACDO,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI;MAAE;MAC1BC,oBAAoB,EAAE;IACxB,CAAC;IACDC,SAAS,EAAE;MACTV,KAAK,EAAE;IACT;EACF;AACF,CAAC,CAAC;AAMF,OAAO,MAAMW,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC3E,oBAAOlB,KAAK,CAACmB,aAAa,CAACjB,mBAAmB,EAAE;IAAEkB,MAAM,EAAEjB;EAAY,CAAC,EAAEe,QAAQ,CAAC;AACpF,CAAC;AAACG,EAAA,GAFWJ,aAA2C;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
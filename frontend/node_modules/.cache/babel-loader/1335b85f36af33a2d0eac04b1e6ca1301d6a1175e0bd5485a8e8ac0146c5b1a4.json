{"ast":null,"code":"import apiClient from './client';\nclass DepartmentService {\n  async getDepartments() {\n    const response = await apiClient.get('/v1/departments');\n    return response.data;\n  }\n  async getDepartmentsByCompany(companyId) {\n    const response = await apiClient.get(`/v1/departments/company/${companyId}`);\n    return response.data;\n  }\n  async getDepartmentById(id) {\n    const response = await apiClient.get(`/v1/departments/${id}`);\n    return response.data;\n  }\n  async createDepartment(departmentData) {\n    const response = await apiClient.post('/v1/departments', departmentData);\n    return response.data;\n  }\n  async updateDepartment(id, departmentData) {\n    const response = await apiClient.put(`/v1/departments/${id}`, departmentData);\n    return response.data;\n  }\n  async deleteDepartment(id) {\n    await apiClient.delete(`/v1/departments/${id}`);\n  }\n}\nconst departmentService = new DepartmentService();\nexport default departmentService;","map":{"version":3,"names":["apiClient","DepartmentService","getDepartments","response","get","data","getDepartmentsByCompany","companyId","getDepartmentById","id","createDepartment","departmentData","post","updateDepartment","put","deleteDepartment","delete","departmentService"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/services/api/departmentService.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { Department } from './types';\r\n\r\nclass DepartmentService {\r\n  async getDepartments(): Promise<Department[]> {\r\n    const response = await apiClient.get<Department[]>('/v1/departments');\r\n    return response.data;\r\n  }\r\n\r\n  async getDepartmentsByCompany(companyId: number): Promise<Department[]> {\r\n    const response = await apiClient.get<Department[]>(`/v1/departments/company/${companyId}`);\r\n    return response.data;\r\n  }\r\n\r\n  async getDepartmentById(id: number): Promise<Department> {\r\n    const response = await apiClient.get<Department>(`/v1/departments/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async createDepartment(departmentData: Partial<Department>): Promise<Department> {\r\n    const response = await apiClient.post<Department>('/v1/departments', departmentData);\r\n    return response.data;\r\n  }\r\n\r\n  async updateDepartment(id: number, departmentData: Partial<Department>): Promise<Department> {\r\n    const response = await apiClient.put<Department>(`/v1/departments/${id}`, departmentData);\r\n    return response.data;\r\n  }\r\n\r\n  async deleteDepartment(id: number): Promise<void> {\r\n    await apiClient.delete(`/v1/departments/${id}`);\r\n  }\r\n}\r\n\r\nconst departmentService = new DepartmentService();\r\nexport default departmentService; "],"mappings":"AAAA,OAAOA,SAAS,MAAM,UAAU;AAGhC,MAAMC,iBAAiB,CAAC;EACtB,MAAMC,cAAcA,CAAA,EAA0B;IAC5C,MAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAe,iBAAiB,CAAC;IACrE,OAAOD,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,uBAAuBA,CAACC,SAAiB,EAAyB;IACtE,MAAMJ,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAe,2BAA2BG,SAAS,EAAE,CAAC;IAC1F,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMG,iBAAiBA,CAACC,EAAU,EAAuB;IACvD,MAAMN,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAa,mBAAmBK,EAAE,EAAE,CAAC;IACzE,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMK,gBAAgBA,CAACC,cAAmC,EAAuB;IAC/E,MAAMR,QAAQ,GAAG,MAAMH,SAAS,CAACY,IAAI,CAAa,iBAAiB,EAAED,cAAc,CAAC;IACpF,OAAOR,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMQ,gBAAgBA,CAACJ,EAAU,EAAEE,cAAmC,EAAuB;IAC3F,MAAMR,QAAQ,GAAG,MAAMH,SAAS,CAACc,GAAG,CAAa,mBAAmBL,EAAE,EAAE,EAAEE,cAAc,CAAC;IACzF,OAAOR,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMU,gBAAgBA,CAACN,EAAU,EAAiB;IAChD,MAAMT,SAAS,CAACgB,MAAM,CAAC,mBAAmBP,EAAE,EAAE,CAAC;EACjD;AACF;AAEA,MAAMQ,iBAAiB,GAAG,IAAIhB,iBAAiB,CAAC,CAAC;AACjD,eAAegB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
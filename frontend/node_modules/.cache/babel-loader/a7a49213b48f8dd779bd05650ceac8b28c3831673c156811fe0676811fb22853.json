{"ast":null,"code":"import apiClient from './client';\nclass UserService {\n  async getCurrentUserProfile() {\n    const response = await apiClient.get('/v1/users/profile');\n    return response.data;\n  }\n  async getUserById(id) {\n    const response = await apiClient.get(`/v1/users/${id}`);\n    return response.data;\n  }\n  async updateUserProfile(userData) {\n    const response = await apiClient.put('/v1/users/profile', userData);\n    return response.data;\n  }\n}\nexport const userService = new UserService();\nexport default userService;","map":{"version":3,"names":["apiClient","UserService","getCurrentUserProfile","response","get","data","getUserById","id","updateUserProfile","userData","put","userService"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/services/api/userService.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { User } from './types';\r\n\r\nclass UserService {\r\n  async getCurrentUserProfile(): Promise<User> {\r\n    const response = await apiClient.get<User>('/v1/users/profile');\r\n    return response.data;\r\n  }\r\n\r\n  async getUserById(id: number): Promise<User> {\r\n    const response = await apiClient.get<User>(`/v1/users/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async updateUserProfile(userData: Partial<User>): Promise<User> {\r\n    const response = await apiClient.put<User>('/v1/users/profile', userData);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport const userService = new UserService();\r\nexport default userService; "],"mappings":"AAAA,OAAOA,SAAS,MAAM,UAAU;AAGhC,MAAMC,WAAW,CAAC;EAChB,MAAMC,qBAAqBA,CAAA,EAAkB;IAC3C,MAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAO,mBAAmB,CAAC;IAC/D,OAAOD,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,WAAWA,CAACC,EAAU,EAAiB;IAC3C,MAAMJ,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAO,aAAaG,EAAE,EAAE,CAAC;IAC7D,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMG,iBAAiBA,CAACC,QAAuB,EAAiB;IAC9D,MAAMN,QAAQ,GAAG,MAAMH,SAAS,CAACU,GAAG,CAAO,mBAAmB,EAAED,QAAQ,CAAC;IACzE,OAAON,QAAQ,CAACE,IAAI;EACtB;AACF;AAEA,OAAO,MAAMM,WAAW,GAAG,IAAIV,WAAW,CAAC,CAAC;AAC5C,eAAeU,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
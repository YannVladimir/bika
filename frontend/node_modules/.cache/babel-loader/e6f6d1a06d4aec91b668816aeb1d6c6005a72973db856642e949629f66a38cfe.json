{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\bika\\\\bika\\\\frontend\\\\src\\\\pages\\\\Users\\\\Users.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Box, Typography, Card, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Chip, InputAdornment, Pagination, TextField as MuiTextField, styled, TableSortLabel, Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Alert, CircularProgress, Grid, Fab } from \"@mui/material\";\nimport { Edit as EditIcon, Delete as DeleteIcon, Search as SearchIcon, Add as AddIcon, PersonOff as DeactivateIcon, PersonAdd as ActivateIcon } from \"@mui/icons-material\";\nimport { tokens } from \"../../theme/theme\";\nimport { userService, companyService, departmentService, UserRole } from \"../../services/api\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { getRoleDisplayName, hasRole } from \"../../utils/roleUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  borderRadius: 16,\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.05)\"\n}));\n_c = StyledCard;\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = StyledTableCell;\nconst StatusChip = styled(Chip)(({\n  status,\n  theme\n}) => ({\n  backgroundColor: status === \"active\" ? theme.palette.mode === \"light\" ? tokens.secondary.light : tokens.secondary.main : theme.palette.grey[300],\n  color: status === \"active\" ? theme.palette.mode === \"light\" ? tokens.secondary.dark : theme.palette.getContrastText(tokens.secondary.main) : theme.palette.getContrastText(theme.palette.grey[300]),\n  borderRadius: 8,\n  fontWeight: 500\n}));\n_c3 = StatusChip;\nconst RoleChip = styled(Chip)(({\n  theme\n}) => ({\n  borderRadius: 8,\n  fontWeight: 500\n}));\n_c4 = RoleChip;\nconst Users = () => {\n  _s();\n  const {\n    user: currentUser\n  } = useContext(AuthContext);\n\n  // State\n  const [users, setUsers] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(10);\n  const [sortBy, setSortBy] = useState(\"firstName\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n\n  // Dialog states\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n\n  // Form states\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    companyId: 0,\n    departmentId: 0,\n    role: UserRole.USER\n  });\n\n  // Load initial data\n  useEffect(() => {\n    loadData();\n  }, [currentUser]);\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN')) {\n        // Super admin can see all users and companies\n        const [usersData, companiesData] = await Promise.all([userService.getUsers(), companyService.getCompanies()]);\n        setUsers(usersData);\n        setCompanies(companiesData);\n      } else if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN') && currentUser !== null && currentUser !== void 0 && currentUser.companyId) {\n        // Company admin can see users from their company\n        const [usersData, companiesData, departmentsData] = await Promise.all([userService.getUsersByCompany(currentUser.companyId), companyService.getCompanies(), departmentService.getDepartmentsByCompany(currentUser.companyId)]);\n        setUsers(usersData);\n        setCompanies(companiesData);\n        setDepartments(departmentsData);\n      } else {\n        setError(\"You don't have permission to view users\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error loading data:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadDepartmentsByCompany = async companyId => {\n    try {\n      const departmentsData = await departmentService.getDepartmentsByCompany(companyId);\n      setDepartments(departmentsData);\n    } catch (err) {\n      console.error('Error loading departments:', err);\n    }\n  };\n\n  // Filtering and sorting\n  const filteredUsers = users.filter(user => user.firstName.toLowerCase().includes(searchTerm.toLowerCase()) || user.lastName.toLowerCase().includes(searchTerm.toLowerCase()) || user.email.toLowerCase().includes(searchTerm.toLowerCase()) || user.username.toLowerCase().includes(searchTerm.toLowerCase()));\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\n    const aValue = a[sortBy];\n    const bValue = b[sortBy];\n    if (aValue < bValue) return sortOrder === \"asc\" ? -1 : 1;\n    if (aValue > bValue) return sortOrder === \"asc\" ? 1 : -1;\n    return 0;\n  });\n\n  // Pagination\n  const totalPages = Math.ceil(sortedUsers.length / usersPerPage);\n  const paginatedUsers = sortedUsers.slice((currentPage - 1) * usersPerPage, currentPage * usersPerPage);\n\n  // Event handlers\n  const handleSort = column => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortBy(column);\n      setSortOrder(\"asc\");\n    }\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1);\n  };\n  const handlePageChange = (_, value) => {\n    setCurrentPage(value);\n  };\n\n  // CRUD operations\n  const handleAddUser = () => {\n    setFormData({\n      username: '',\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      companyId: hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') ? 0 : (currentUser === null || currentUser === void 0 ? void 0 : currentUser.companyId) || 0,\n      departmentId: 0,\n      role: UserRole.USER\n    });\n    if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN') && currentUser !== null && currentUser !== void 0 && currentUser.companyId) {\n      loadDepartmentsByCompany(currentUser.companyId);\n    }\n    setAddDialogOpen(true);\n  };\n  const handleEditUser = user => {\n    setEditingUser(user);\n    setFormData({\n      username: user.username,\n      email: user.email,\n      password: '',\n      // Don't pre-fill password\n      firstName: user.firstName,\n      lastName: user.lastName,\n      companyId: user.companyId,\n      departmentId: user.departmentId || 0,\n      role: user.role\n    });\n    if (user.companyId) {\n      loadDepartmentsByCompany(user.companyId);\n    }\n    setEditDialogOpen(true);\n  };\n  const handleDeleteUser = user => {\n    setUserToDelete(user);\n    setDeleteDialogOpen(true);\n  };\n  const handleToggleUserStatus = async user => {\n    try {\n      if (user.active) {\n        await userService.deactivateUser(user.id);\n      } else {\n        await userService.activateUser(user.id);\n      }\n      await loadData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to update user status');\n    }\n  };\n\n  // Form handlers\n  const handleFormChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Load departments when company changes\n    if (field === 'companyId' && value) {\n      loadDepartmentsByCompany(value);\n    }\n  };\n  const handleSaveUser = async () => {\n    try {\n      if (editingUser) {\n        // Update existing user\n        await userService.updateUser(editingUser.id, {\n          firstName: formData.firstName,\n          lastName: formData.lastName,\n          role: formData.role,\n          companyId: formData.companyId,\n          departmentId: formData.departmentId || undefined\n        });\n      } else {\n        // Create new user\n        await userService.createUser(formData);\n      }\n      setEditDialogOpen(false);\n      setAddDialogOpen(false);\n      setEditingUser(null);\n      await loadData();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to save user');\n    }\n  };\n  const handleConfirmDelete = async () => {\n    if (!userToDelete) return;\n    try {\n      await userService.deleteUser(userToDelete.id);\n      setDeleteDialogOpen(false);\n      setUserToDelete(null);\n      await loadData();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to delete user');\n    }\n  };\n  const handleCloseDialogs = () => {\n    setEditDialogOpen(false);\n    setAddDialogOpen(false);\n    setDeleteDialogOpen(false);\n    setEditingUser(null);\n    setUserToDelete(null);\n    setError(null);\n  };\n\n  // Get available roles based on current user\n  const getAvailableRoles = () => {\n    if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN')) {\n      return [UserRole.SUPER_ADMIN, UserRole.COMPANY_ADMIN, UserRole.MANAGER, UserRole.USER];\n    } else if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN')) {\n      return [UserRole.MANAGER, UserRole.USER];\n    }\n    return [UserRole.USER];\n  };\n\n  // Get company name\n  const getCompanyName = companyId => {\n    const company = companies.find(c => c.id === companyId);\n    return company ? company.name : 'Unknown';\n  };\n\n  // Get department name\n  const getDepartmentName = departmentId => {\n    if (!departmentId) return 'No Department';\n    const department = departments.find(d => d.id === departmentId);\n    return department ? department.name : 'Unknown';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !users.length) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        children: \"Users & Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') || hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN')) && /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add user\",\n        onClick: handleAddUser,\n        sx: {\n          position: \"fixed\",\n          bottom: 24,\n          right: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      onClose: () => setError(null),\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledCard, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(MuiTextField, {\n          placeholder: \"Search users...\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)\n          },\n          sx: {\n            mb: 2,\n            width: \"100%\",\n            maxWidth: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"firstName\",\n                    direction: sortBy === \"firstName\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"firstName\"),\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"email\",\n                    direction: sortBy === \"email\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"email\"),\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"role\",\n                    direction: sortBy === \"role\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"role\"),\n                    children: \"Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"active\",\n                    direction: sortBy === \"active\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"active\"),\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: paginatedUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    fontWeight: \"medium\",\n                    children: [user.firstName, \" \", user.lastName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"@\", user.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(RoleChip, {\n                    label: getRoleDisplayName(user.role),\n                    color: user.role === UserRole.SUPER_ADMIN ? \"error\" : user.role === UserRole.COMPANY_ADMIN ? \"warning\" : user.role === UserRole.MANAGER ? \"info\" : \"default\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: getCompanyName(user.companyId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: getDepartmentName(user.departmentId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(StatusChip, {\n                    label: user.active ? \"Active\" : \"Inactive\",\n                    status: user.active ? \"active\" : \"inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      gap: 1\n                    },\n                    children: (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') || hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN') && user.companyId === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.companyId)) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => handleEditUser(user),\n                        size: \"small\",\n                        color: \"primary\",\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 488,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 483,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => handleToggleUserStatus(user),\n                        size: \"small\",\n                        color: user.active ? \"warning\" : \"success\",\n                        children: user.active ? /*#__PURE__*/_jsxDEV(DeactivateIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 495,\n                          columnNumber: 46\n                        }, this) : /*#__PURE__*/_jsxDEV(ActivateIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 495,\n                          columnNumber: 84\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 490,\n                        columnNumber: 29\n                      }, this), hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') && /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => handleDeleteUser(user),\n                        size: \"small\",\n                        color: \"error\",\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 503,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            count: totalPages,\n            page: currentPage,\n            onChange: handlePageChange,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: addDialogOpen,\n      onClose: handleCloseDialogs,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Username\",\n              value: formData.username,\n              onChange: e => handleFormChange('username', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Email\",\n              type: \"email\",\n              value: formData.email,\n              onChange: e => handleFormChange('email', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"First Name\",\n              value: formData.firstName,\n              onChange: e => handleFormChange('firstName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Last Name\",\n              value: formData.lastName,\n              onChange: e => handleFormChange('lastName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Password\",\n              type: \"password\",\n              value: formData.password,\n              onChange: e => handleFormChange('password', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.companyId,\n                onChange: e => handleFormChange('companyId', e.target.value),\n                label: \"Company\",\n                children: companies.map(company => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: company.id,\n                  children: company.name\n                }, company.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.departmentId,\n                onChange: e => handleFormChange('departmentId', e.target.value),\n                label: \"Department\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"No Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this), departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: department.id,\n                  children: department.name\n                }, department.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.role,\n                onChange: e => handleFormChange('role', e.target.value),\n                label: \"Role\",\n                children: getAvailableRoles().map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: role,\n                  children: getRoleDisplayName(role)\n                }, role, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveUser,\n          variant: \"contained\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleCloseDialogs,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"First Name\",\n              value: formData.firstName,\n              onChange: e => handleFormChange('firstName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Last Name\",\n              value: formData.lastName,\n              onChange: e => handleFormChange('lastName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.role,\n                onChange: e => handleFormChange('role', e.target.value),\n                label: \"Role\",\n                children: getAvailableRoles().map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: role,\n                  children: getRoleDisplayName(role)\n                }, role, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.departmentId,\n                onChange: e => handleFormChange('departmentId', e.target.value),\n                label: \"Department\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"No Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 19\n                }, this), departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: department.id,\n                  children: department.name\n                }, department.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveUser,\n          variant: \"contained\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleCloseDialogs,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete user \\\"\", userToDelete === null || userToDelete === void 0 ? void 0 : userToDelete.firstName, \" \", userToDelete === null || userToDelete === void 0 ? void 0 : userToDelete.lastName, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"mizGINCeSYm7hnha+DVOGkJU+Y4=\");\n_c5 = Users;\nexport default Users;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"StyledTableCell\");\n$RefreshReg$(_c3, \"StatusChip\");\n$RefreshReg$(_c4, \"RoleChip\");\n$RefreshReg$(_c5, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Box","Typography","Card","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Chip","InputAdornment","Pagination","TextField","MuiTextField","styled","TableSortLabel","Dialog","DialogTitle","DialogContent","DialogActions","Button","FormControl","InputLabel","Select","MenuItem","Alert","CircularProgress","Grid","Fab","Edit","EditIcon","Delete","DeleteIcon","Search","SearchIcon","Add","AddIcon","PersonOff","DeactivateIcon","PersonAdd","ActivateIcon","tokens","userService","companyService","departmentService","UserRole","AuthContext","getRoleDisplayName","hasRole","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledCard","theme","borderRadius","boxShadow","_c","StyledTableCell","borderBottom","palette","divider","_c2","StatusChip","status","backgroundColor","mode","secondary","light","main","grey","color","dark","getContrastText","fontWeight","_c3","RoleChip","_c4","Users","_s","user","currentUser","users","setUsers","companies","setCompanies","departments","setDepartments","loading","setLoading","error","setError","searchTerm","setSearchTerm","currentPage","setCurrentPage","usersPerPage","sortBy","setSortBy","sortOrder","setSortOrder","editDialogOpen","setEditDialogOpen","addDialogOpen","setAddDialogOpen","editingUser","setEditingUser","deleteDialogOpen","setDeleteDialogOpen","userToDelete","setUserToDelete","formData","setFormData","username","email","password","firstName","lastName","companyId","departmentId","role","USER","loadData","usersData","companiesData","Promise","all","getUsers","getCompanies","departmentsData","getUsersByCompany","getDepartmentsByCompany","err","_err$response","_err$response$data","console","response","data","message","loadDepartmentsByCompany","filteredUsers","filter","toLowerCase","includes","sortedUsers","sort","a","b","aValue","bValue","totalPages","Math","ceil","length","paginatedUsers","slice","handleSort","column","handleSearchChange","e","target","value","handlePageChange","_","handleAddUser","handleEditUser","handleDeleteUser","handleToggleUserStatus","active","deactivateUser","id","activateUser","_err$response2","_err$response2$data","handleFormChange","field","prev","handleSaveUser","updateUser","undefined","createUser","_err$response3","_err$response3$data","handleConfirmDelete","deleteUser","_err$response4","_err$response4$data","handleCloseDialogs","getAvailableRoles","SUPER_ADMIN","COMPANY_ADMIN","MANAGER","getCompanyName","company","find","c","name","getDepartmentName","department","d","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","p","severity","sx","mb","variant","onClick","position","bottom","right","onClose","placeholder","onChange","InputProps","startAdornment","width","maxWidth","direction","map","hover","label","gap","size","fontSize","mt","count","page","open","fullWidth","container","spacing","item","xs","sm","required","type","_c5","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/pages/Users/Users.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Chip,\r\n  InputAdornment,\r\n  Pagination,\r\n  TextField as MuiTextField,\r\n  styled,\r\n  TableSortLabel,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  CircularProgress,\r\n  Grid,\r\n  Fab,\r\n} from \"@mui/material\";\r\nimport {\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  Add as AddIcon,\r\n  PersonOff as DeactivateIcon,\r\n  PersonAdd as ActivateIcon,\r\n} from \"@mui/icons-material\";\r\nimport { tokens } from \"../../theme/theme\";\r\nimport { InputChangeEvent, SelectChangeEvent } from \"../../types/events\";\r\nimport { userService, companyService, departmentService, User, UserRole, Company, Department, CreateUserRequest } from \"../../services/api\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { getRoleDisplayName, hasRole, hasMinimumRole } from \"../../utils/roleUtils\";\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  borderRadius: 16,\r\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.05)\",\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\nconst StatusChip = styled(Chip)<{ status: \"active\" | \"inactive\" }>(\r\n  ({ status, theme }) => ({\r\n    backgroundColor:\r\n      status === \"active\"\r\n        ? theme.palette.mode === \"light\"\r\n          ? tokens.secondary.light\r\n          : tokens.secondary.main\r\n        : theme.palette.grey[300],\r\n    color:\r\n      status === \"active\"\r\n        ? theme.palette.mode === \"light\"\r\n          ? tokens.secondary.dark\r\n          : theme.palette.getContrastText(tokens.secondary.main)\r\n        : theme.palette.getContrastText(theme.palette.grey[300]),\r\n    borderRadius: 8,\r\n    fontWeight: 500,\r\n  })\r\n);\r\n\r\nconst RoleChip = styled(Chip)(({ theme }) => ({\r\n  borderRadius: 8,\r\n  fontWeight: 500,\r\n}));\r\n\r\ninterface UsersProps {}\r\n\r\nconst Users: React.FC<UsersProps> = () => {\r\n  const { user: currentUser } = useContext(AuthContext);\r\n  \r\n  // State\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [usersPerPage] = useState(10);\r\n  const [sortBy, setSortBy] = useState<keyof User>(\"firstName\");\r\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"asc\");\r\n\r\n  // Dialog states\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [editingUser, setEditingUser] = useState<User | null>(null);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState<User | null>(null);\r\n\r\n  // Form states\r\n  const [formData, setFormData] = useState<CreateUserRequest>({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    companyId: 0,\r\n    departmentId: 0,\r\n    role: UserRole.USER\r\n  });\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [currentUser]);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      if (hasRole(currentUser?.role, 'SUPER_ADMIN')) {\r\n        // Super admin can see all users and companies\r\n        const [usersData, companiesData] = await Promise.all([\r\n          userService.getUsers(),\r\n          companyService.getCompanies()\r\n        ]);\r\n        setUsers(usersData);\r\n        setCompanies(companiesData);\r\n      } else if (hasRole(currentUser?.role, 'COMPANY_ADMIN') && currentUser?.companyId) {\r\n        // Company admin can see users from their company\r\n        const [usersData, companiesData, departmentsData] = await Promise.all([\r\n          userService.getUsersByCompany(currentUser.companyId),\r\n          companyService.getCompanies(),\r\n          departmentService.getDepartmentsByCompany(currentUser.companyId)\r\n        ]);\r\n        setUsers(usersData);\r\n        setCompanies(companiesData);\r\n        setDepartments(departmentsData);\r\n      } else {\r\n        setError(\"You don't have permission to view users\");\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error loading data:', err);\r\n      setError(err.response?.data?.message || 'Failed to load data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadDepartmentsByCompany = async (companyId: number) => {\r\n    try {\r\n      const departmentsData = await departmentService.getDepartmentsByCompany(companyId);\r\n      setDepartments(departmentsData);\r\n    } catch (err: any) {\r\n      console.error('Error loading departments:', err);\r\n    }\r\n  };\r\n\r\n  // Filtering and sorting\r\n  const filteredUsers = users.filter(user =>\r\n    user.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.username.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\r\n    const aValue = a[sortBy];\r\n    const bValue = b[sortBy];\r\n    \r\n    if (aValue < bValue) return sortOrder === \"asc\" ? -1 : 1;\r\n    if (aValue > bValue) return sortOrder === \"asc\" ? 1 : -1;\r\n    return 0;\r\n  });\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(sortedUsers.length / usersPerPage);\r\n  const paginatedUsers = sortedUsers.slice(\r\n    (currentPage - 1) * usersPerPage,\r\n    currentPage * usersPerPage\r\n  );\r\n\r\n  // Event handlers\r\n  const handleSort = (column: keyof User) => {\r\n    if (sortBy === column) {\r\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\r\n    } else {\r\n      setSortBy(column);\r\n      setSortOrder(\"asc\");\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (e: InputChangeEvent) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (_: unknown, value: number) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  // CRUD operations\r\n  const handleAddUser = () => {\r\n    setFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      companyId: hasRole(currentUser?.role, 'SUPER_ADMIN') ? 0 : currentUser?.companyId || 0,\r\n      departmentId: 0,\r\n      role: UserRole.USER\r\n    });\r\n    \r\n    if (hasRole(currentUser?.role, 'COMPANY_ADMIN') && currentUser?.companyId) {\r\n      loadDepartmentsByCompany(currentUser.companyId);\r\n    }\r\n    \r\n    setAddDialogOpen(true);\r\n  };\r\n\r\n  const handleEditUser = (user: User) => {\r\n    setEditingUser(user);\r\n    setFormData({\r\n      username: user.username,\r\n      email: user.email,\r\n      password: '', // Don't pre-fill password\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      companyId: user.companyId,\r\n      departmentId: user.departmentId || 0,\r\n      role: user.role\r\n    });\r\n    \r\n    if (user.companyId) {\r\n      loadDepartmentsByCompany(user.companyId);\r\n    }\r\n    \r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteUser = (user: User) => {\r\n    setUserToDelete(user);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleToggleUserStatus = async (user: User) => {\r\n    try {\r\n      if (user.active) {\r\n        await userService.deactivateUser(user.id);\r\n      } else {\r\n        await userService.activateUser(user.id);\r\n      }\r\n      await loadData();\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to update user status');\r\n    }\r\n  };\r\n\r\n  // Form handlers\r\n  const handleFormChange = (field: keyof CreateUserRequest, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n\r\n    // Load departments when company changes\r\n    if (field === 'companyId' && value) {\r\n      loadDepartmentsByCompany(value);\r\n    }\r\n  };\r\n\r\n  const handleSaveUser = async () => {\r\n    try {\r\n      if (editingUser) {\r\n        // Update existing user\r\n        await userService.updateUser(editingUser.id, {\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n          role: formData.role,\r\n          companyId: formData.companyId,\r\n          departmentId: formData.departmentId || undefined\r\n        });\r\n      } else {\r\n        // Create new user\r\n        await userService.createUser(formData);\r\n      }\r\n      \r\n      setEditDialogOpen(false);\r\n      setAddDialogOpen(false);\r\n      setEditingUser(null);\r\n      await loadData();\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to save user');\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (!userToDelete) return;\r\n    \r\n    try {\r\n      await userService.deleteUser(userToDelete.id);\r\n      setDeleteDialogOpen(false);\r\n      setUserToDelete(null);\r\n      await loadData();\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to delete user');\r\n    }\r\n  };\r\n\r\n  const handleCloseDialogs = () => {\r\n    setEditDialogOpen(false);\r\n    setAddDialogOpen(false);\r\n    setDeleteDialogOpen(false);\r\n    setEditingUser(null);\r\n    setUserToDelete(null);\r\n    setError(null);\r\n  };\r\n\r\n  // Get available roles based on current user\r\n  const getAvailableRoles = (): UserRole[] => {\r\n    if (hasRole(currentUser?.role, 'SUPER_ADMIN')) {\r\n      return [UserRole.SUPER_ADMIN, UserRole.COMPANY_ADMIN, UserRole.MANAGER, UserRole.USER];\r\n    } else if (hasRole(currentUser?.role, 'COMPANY_ADMIN')) {\r\n      return [UserRole.MANAGER, UserRole.USER];\r\n    }\r\n    return [UserRole.USER];\r\n  };\r\n\r\n  // Get company name\r\n  const getCompanyName = (companyId: number): string => {\r\n    const company = companies.find(c => c.id === companyId);\r\n    return company ? company.name : 'Unknown';\r\n  };\r\n\r\n  // Get department name\r\n  const getDepartmentName = (departmentId: number | undefined): string => {\r\n    if (!departmentId) return 'No Department';\r\n    const department = departments.find(d => d.id === departmentId);\r\n    return department ? department.name : 'Unknown';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error && !users.length) {\r\n    return (\r\n      <Box p={3}>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", mb: 3 }}>\r\n        <Typography variant=\"h4\" fontWeight=\"bold\">\r\n          Users & Roles\r\n        </Typography>\r\n        {(hasRole(currentUser?.role, 'SUPER_ADMIN') || hasRole(currentUser?.role, 'COMPANY_ADMIN')) && (\r\n          <Fab\r\n            color=\"primary\"\r\n            aria-label=\"add user\"\r\n            onClick={handleAddUser}\r\n            sx={{ position: \"fixed\", bottom: 24, right: 24 }}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        )}\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" onClose={() => setError(null)} sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <StyledCard>\r\n        <Box sx={{ p: 2 }}>\r\n          <MuiTextField\r\n            placeholder=\"Search users...\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            sx={{ mb: 2, width: \"100%\", maxWidth: 400 }}\r\n          />\r\n\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>\r\n                    <TableSortLabel\r\n                      active={sortBy === \"firstName\"}\r\n                      direction={sortBy === \"firstName\" ? sortOrder : \"asc\"}\r\n                      onClick={() => handleSort(\"firstName\")}\r\n                    >\r\n                      Name\r\n                    </TableSortLabel>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    <TableSortLabel\r\n                      active={sortBy === \"email\"}\r\n                      direction={sortBy === \"email\" ? sortOrder : \"asc\"}\r\n                      onClick={() => handleSort(\"email\")}\r\n                    >\r\n                      Email\r\n                    </TableSortLabel>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    <TableSortLabel\r\n                      active={sortBy === \"role\"}\r\n                      direction={sortBy === \"role\" ? sortOrder : \"asc\"}\r\n                      onClick={() => handleSort(\"role\")}\r\n                    >\r\n                      Role\r\n                    </TableSortLabel>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>Company</StyledTableCell>\r\n                  <StyledTableCell>Department</StyledTableCell>\r\n                  <StyledTableCell>\r\n                    <TableSortLabel\r\n                      active={sortBy === \"active\"}\r\n                      direction={sortBy === \"active\" ? sortOrder : \"asc\"}\r\n                      onClick={() => handleSort(\"active\")}\r\n                    >\r\n                      Status\r\n                    </TableSortLabel>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>Actions</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {paginatedUsers.map((user) => (\r\n                  <TableRow key={user.id} hover>\r\n                    <StyledTableCell>\r\n                      <Typography fontWeight=\"medium\">\r\n                        {user.firstName} {user.lastName}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        @{user.username}\r\n                      </Typography>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell>{user.email}</StyledTableCell>\r\n                    <StyledTableCell>\r\n                      <RoleChip\r\n                        label={getRoleDisplayName(user.role)}\r\n                        color={user.role === UserRole.SUPER_ADMIN ? \"error\" : \r\n                               user.role === UserRole.COMPANY_ADMIN ? \"warning\" :\r\n                               user.role === UserRole.MANAGER ? \"info\" : \"default\"}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </StyledTableCell>\r\n                    <StyledTableCell>{getCompanyName(user.companyId)}</StyledTableCell>\r\n                    <StyledTableCell>{getDepartmentName(user.departmentId)}</StyledTableCell>\r\n                    <StyledTableCell>\r\n                      <StatusChip\r\n                        label={user.active ? \"Active\" : \"Inactive\"}\r\n                        status={user.active ? \"active\" : \"inactive\"}\r\n                      />\r\n                    </StyledTableCell>\r\n                    <StyledTableCell>\r\n                      <Box sx={{ display: \"flex\", gap: 1 }}>\r\n                        {(hasRole(currentUser?.role, 'SUPER_ADMIN') || \r\n                          (hasRole(currentUser?.role, 'COMPANY_ADMIN') && user.companyId === currentUser?.companyId)) && (\r\n                          <>\r\n                            <IconButton\r\n                              onClick={() => handleEditUser(user)}\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                            >\r\n                              <EditIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              onClick={() => handleToggleUserStatus(user)}\r\n                              size=\"small\"\r\n                              color={user.active ? \"warning\" : \"success\"}\r\n                            >\r\n                              {user.active ? <DeactivateIcon fontSize=\"small\" /> : <ActivateIcon fontSize=\"small\" />}\r\n                            </IconButton>\r\n                            {hasRole(currentUser?.role, 'SUPER_ADMIN') && (\r\n                              <IconButton\r\n                                onClick={() => handleDeleteUser(user)}\r\n                                size=\"small\"\r\n                                color=\"error\"\r\n                              >\r\n                                <DeleteIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </Box>\r\n                    </StyledTableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {totalPages > 1 && (\r\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\r\n              <Pagination\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={handlePageChange}\r\n                color=\"primary\"\r\n              />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </StyledCard>\r\n\r\n      {/* Add User Dialog */}\r\n      <Dialog open={addDialogOpen} onClose={handleCloseDialogs} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Add New User</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <MuiTextField\r\n                label=\"Username\"\r\n                value={formData.username}\r\n                onChange={(e) => handleFormChange('username', e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <MuiTextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={(e) => handleFormChange('email', e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <MuiTextField\r\n                label=\"First Name\"\r\n                value={formData.firstName}\r\n                onChange={(e) => handleFormChange('firstName', e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <MuiTextField\r\n                label=\"Last Name\"\r\n                value={formData.lastName}\r\n                onChange={(e) => handleFormChange('lastName', e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <MuiTextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={(e) => handleFormChange('password', e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n            {hasRole(currentUser?.role, 'SUPER_ADMIN') && (\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth required>\r\n                  <InputLabel>Company</InputLabel>\r\n                  <Select\r\n                    value={formData.companyId}\r\n                    onChange={(e) => handleFormChange('companyId', e.target.value)}\r\n                    label=\"Company\"\r\n                  >\r\n                    {companies.map(company => (\r\n                      <MenuItem key={company.id} value={company.id}>\r\n                        {company.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Department</InputLabel>\r\n                <Select\r\n                  value={formData.departmentId}\r\n                  onChange={(e) => handleFormChange('departmentId', e.target.value)}\r\n                  label=\"Department\"\r\n                >\r\n                  <MenuItem value={0}>No Department</MenuItem>\r\n                  {departments.map(department => (\r\n                    <MenuItem key={department.id} value={department.id}>\r\n                      {department.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel>Role</InputLabel>\r\n                <Select\r\n                  value={formData.role}\r\n                  onChange={(e) => handleFormChange('role', e.target.value)}\r\n                  label=\"Role\"\r\n                >\r\n                  {getAvailableRoles().map(role => (\r\n                    <MenuItem key={role} value={role}>\r\n                      {getRoleDisplayName(role)}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialogs}>Cancel</Button>\r\n          <Button onClick={handleSaveUser} variant=\"contained\">\r\n            Add User\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Edit User Dialog */}\r\n      <Dialog open={editDialogOpen} onClose={handleCloseDialogs} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Edit User</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <MuiTextField\r\n                label=\"First Name\"\r\n                value={formData.firstName}\r\n                onChange={(e) => handleFormChange('firstName', e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <MuiTextField\r\n                label=\"Last Name\"\r\n                value={formData.lastName}\r\n                onChange={(e) => handleFormChange('lastName', e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel>Role</InputLabel>\r\n                <Select\r\n                  value={formData.role}\r\n                  onChange={(e) => handleFormChange('role', e.target.value)}\r\n                  label=\"Role\"\r\n                >\r\n                  {getAvailableRoles().map(role => (\r\n                    <MenuItem key={role} value={role}>\r\n                      {getRoleDisplayName(role)}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Department</InputLabel>\r\n                <Select\r\n                  value={formData.departmentId}\r\n                  onChange={(e) => handleFormChange('departmentId', e.target.value)}\r\n                  label=\"Department\"\r\n                >\r\n                  <MenuItem value={0}>No Department</MenuItem>\r\n                  {departments.map(department => (\r\n                    <MenuItem key={department.id} value={department.id}>\r\n                      {department.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialogs}>Cancel</Button>\r\n          <Button onClick={handleSaveUser} variant=\"contained\">\r\n            Save Changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteDialogOpen} onClose={handleCloseDialogs}>\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            Are you sure you want to delete user \"{userToDelete?.firstName} {userToDelete?.lastName}\"?\r\n            This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialogs}>Cancel</Button>\r\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { USER_ROLES } from '../constants/roles';\nexport const switchUserRole = newRole => {\n  const currentUser = localStorage.getItem('user');\n  if (currentUser) {\n    const user = JSON.parse(currentUser);\n    const updatedUser = {\n      ...user,\n      role: newRole,\n      firstName: getRoleDisplayName(newRole).split(' ')[0],\n      lastName: getRoleDisplayName(newRole).split(' ')[1] || ''\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n\n    // Reload the page to update the UI\n    window.location.reload();\n  }\n};\nexport const getRoleDisplayName = role => {\n  switch (role) {\n    case USER_ROLES.SUPER_ADMIN:\n      return 'Super Admin';\n    case USER_ROLES.COMPANY_ADMIN:\n      return 'Company Admin';\n    case USER_ROLES.ADMIN:\n      return 'Admin User';\n    case USER_ROLES.MANAGER:\n      return 'Manager User';\n    case USER_ROLES.USER:\n      return 'Normal User';\n    default:\n      return 'Unknown Role';\n  }\n};\n\n// Convenience functions for quick role switching\nexport const switchToSuperAdmin = () => switchUserRole(USER_ROLES.SUPER_ADMIN);\nexport const switchToCompanyAdmin = () => switchUserRole(USER_ROLES.COMPANY_ADMIN);\nexport const switchToAdmin = () => switchUserRole(USER_ROLES.ADMIN);\nexport const switchToManager = () => switchUserRole(USER_ROLES.MANAGER);\nexport const switchToUser = () => switchUserRole(USER_ROLES.USER);","map":{"version":3,"names":["USER_ROLES","switchUserRole","newRole","currentUser","localStorage","getItem","user","JSON","parse","updatedUser","role","firstName","getRoleDisplayName","split","lastName","setItem","stringify","window","location","reload","SUPER_ADMIN","COMPANY_ADMIN","ADMIN","MANAGER","USER","switchToSuperAdmin","switchToCompanyAdmin","switchToAdmin","switchToManager","switchToUser"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/utils/roleSwitcher.ts"],"sourcesContent":["import { User } from '../services/api/types';\r\nimport { USER_ROLES, UserRole } from '../constants/roles';\r\n\r\nexport const switchUserRole = (newRole: UserRole): void => {\r\n  const currentUser = localStorage.getItem('user');\r\n  if (currentUser) {\r\n    const user: User = JSON.parse(currentUser);\r\n    const updatedUser: User = {\r\n      ...user,\r\n      role: newRole,\r\n      firstName: getRoleDisplayName(newRole).split(' ')[0],\r\n      lastName: getRoleDisplayName(newRole).split(' ')[1] || '',\r\n    };\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    \r\n    // Reload the page to update the UI\r\n    window.location.reload();\r\n  }\r\n};\r\n\r\nexport const getRoleDisplayName = (role: UserRole): string => {\r\n  switch (role) {\r\n    case USER_ROLES.SUPER_ADMIN:\r\n      return 'Super Admin';\r\n    case USER_ROLES.COMPANY_ADMIN:\r\n      return 'Company Admin';\r\n    case USER_ROLES.ADMIN:\r\n      return 'Admin User';\r\n    case USER_ROLES.MANAGER:\r\n      return 'Manager User';\r\n    case USER_ROLES.USER:\r\n      return 'Normal User';\r\n    default:\r\n      return 'Unknown Role';\r\n  }\r\n};\r\n\r\n// Convenience functions for quick role switching\r\nexport const switchToSuperAdmin = () => switchUserRole(USER_ROLES.SUPER_ADMIN);\r\nexport const switchToCompanyAdmin = () => switchUserRole(USER_ROLES.COMPANY_ADMIN);\r\nexport const switchToAdmin = () => switchUserRole(USER_ROLES.ADMIN);\r\nexport const switchToManager = () => switchUserRole(USER_ROLES.MANAGER);\r\nexport const switchToUser = () => switchUserRole(USER_ROLES.USER); "],"mappings":"AACA,SAASA,UAAU,QAAkB,oBAAoB;AAEzD,OAAO,MAAMC,cAAc,GAAIC,OAAiB,IAAW;EACzD,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAChD,IAAIF,WAAW,EAAE;IACf,MAAMG,IAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC;IAC1C,MAAMM,WAAiB,GAAG;MACxB,GAAGH,IAAI;MACPI,IAAI,EAAER,OAAO;MACbS,SAAS,EAAEC,kBAAkB,CAACV,OAAO,CAAC,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpDC,QAAQ,EAAEF,kBAAkB,CAACV,OAAO,CAAC,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;IACzD,CAAC;IACDT,YAAY,CAACW,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACP,WAAW,CAAC,CAAC;;IAEzD;IACAQ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B;AACF,CAAC;AAED,OAAO,MAAMP,kBAAkB,GAAIF,IAAc,IAAa;EAC5D,QAAQA,IAAI;IACV,KAAKV,UAAU,CAACoB,WAAW;MACzB,OAAO,aAAa;IACtB,KAAKpB,UAAU,CAACqB,aAAa;MAC3B,OAAO,eAAe;IACxB,KAAKrB,UAAU,CAACsB,KAAK;MACnB,OAAO,YAAY;IACrB,KAAKtB,UAAU,CAACuB,OAAO;MACrB,OAAO,cAAc;IACvB,KAAKvB,UAAU,CAACwB,IAAI;MAClB,OAAO,aAAa;IACtB;MACE,OAAO,cAAc;EACzB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAMxB,cAAc,CAACD,UAAU,CAACoB,WAAW,CAAC;AAC9E,OAAO,MAAMM,oBAAoB,GAAGA,CAAA,KAAMzB,cAAc,CAACD,UAAU,CAACqB,aAAa,CAAC;AAClF,OAAO,MAAMM,aAAa,GAAGA,CAAA,KAAM1B,cAAc,CAACD,UAAU,CAACsB,KAAK,CAAC;AACnE,OAAO,MAAMM,eAAe,GAAGA,CAAA,KAAM3B,cAAc,CAACD,UAAU,CAACuB,OAAO,CAAC;AACvE,OAAO,MAAMM,YAAY,GAAGA,CAAA,KAAM5B,cAAc,CAACD,UAAU,CAACwB,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
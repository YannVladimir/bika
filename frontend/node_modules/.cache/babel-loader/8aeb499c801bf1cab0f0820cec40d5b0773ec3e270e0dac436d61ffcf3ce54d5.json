{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\bika\\\\bika\\\\frontend\\\\src\\\\pages\\\\Archival\\\\ArchivalPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Button, Paper, Grid, Breadcrumbs, Link, Modal, TextField, MenuItem, IconButton, Alert, CircularProgress } from \"@mui/material\";\nimport { Add as AddIcon, Close as CloseIcon, Folder as FolderIcon, InsertDriveFile as FileIcon, CreateNewFolder as NewFolderIcon } from \"@mui/icons-material\";\nimport { tokens } from \"../../theme/theme\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { folderService, documentService, documentTypeService } from \"../../services/api\";\n\n// Helper function to find folder by path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst findFolderByPath = (folders, path) => {\n  if (path.length === 0) return undefined;\n  for (const folder of folders) {\n    if (folder.name === path[0]) {\n      if (path.length === 1) return folder;\n      if (folder.children) {\n        return findFolderByPath(folder.children, path.slice(1));\n      }\n    }\n  }\n  return undefined;\n};\nconst ArchivalPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n\n  // State for folders and navigation\n  const [folders, setFolders] = useState([]);\n  const [currentPath, setCurrentPath] = useState([]);\n  const [currentFolder, setCurrentFolder] = useState(null);\n\n  // State for document types\n  const [documentTypes, setDocumentTypes] = useState([]);\n\n  // Modal states\n  const [openUpload, setOpenUpload] = useState(false);\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n  const [viewDoc, setViewDoc] = useState(null);\n\n  // Form states\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [attachment, setAttachment] = useState(null);\n  const [docFields, setDocFields] = useState({});\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [newFolderDescription, setNewFolderDescription] = useState(\"\");\n  const [documentName, setDocumentName] = useState(\"\");\n  const [documentCode, setDocumentCode] = useState(\"\");\n\n  // Loading and error states\n  const [loading, setLoading] = useState(true);\n  const [uploadLoading, setUploadLoading] = useState(false);\n  const [folderLoading, setFolderLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      if (!(user !== null && user !== void 0 && user.companyId)) return;\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Load root folders and document types in parallel\n        const [foldersData, documentTypesData] = await Promise.all([folderService.getRootFoldersByCompany(user.companyId), documentTypeService.getDocumentTypesByCompany(user.companyId)]);\n        setFolders(foldersData);\n        setDocumentTypes(documentTypesData);\n      } catch (err) {\n        console.error('Error loading data:', err);\n        setError('Failed to load folders and document types');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n  }, [user === null || user === void 0 ? void 0 : user.companyId]);\n\n  // Update current folder when path changes\n  useEffect(() => {\n    if (currentPath.length === 0) {\n      setCurrentFolder(null);\n    } else {\n      const folder = findFolderByPath(folders, currentPath);\n      setCurrentFolder(folder || null);\n    }\n  }, [currentPath, folders]);\n\n  // Folder navigation\n  const handleFolderClick = async folder => {\n    try {\n      setLoading(true);\n      // Get folder contents including documents\n      const folderWithContents = await folderService.getFolderContents(folder.id);\n\n      // Update the folder in our state with the new contents\n      const updateFolderInTree = (folders, targetId, newData) => {\n        return folders.map(f => {\n          if (f.id === targetId) {\n            return {\n              ...f,\n              ...newData\n            };\n          }\n          if (f.children) {\n            return {\n              ...f,\n              children: updateFolderInTree(f.children, targetId, newData)\n            };\n          }\n          return f;\n        });\n      };\n      setFolders(prev => updateFolderInTree(prev, folder.id, folderWithContents));\n      setCurrentPath([...currentPath, folder.name]);\n    } catch (err) {\n      console.error('Error loading folder contents:', err);\n      setError('Failed to load folder contents');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleBack = idx => {\n    if (typeof idx === \"number\") {\n      setCurrentPath(currentPath.slice(0, idx + 1));\n    } else {\n      setCurrentPath([]);\n    }\n  };\n\n  // Create new folder\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim() || !(user !== null && user !== void 0 && user.companyId)) return;\n    try {\n      setFolderLoading(true);\n      setError(null);\n      const folderRequest = {\n        name: newFolderName,\n        description: newFolderDescription,\n        companyId: user.companyId,\n        departmentId: user.departmentId,\n        parentId: currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id\n      };\n      const newFolder = await folderService.createFolder(folderRequest);\n\n      // Add the new folder to the appropriate location in our state\n      if (currentPath.length === 0) {\n        // Adding to root\n        setFolders(prev => [...prev, newFolder]);\n      } else {\n        // Adding to current folder\n        const updateFolderChildren = (folders, path, newChild) => {\n          if (path.length === 0) return folders;\n          return folders.map(f => {\n            if (f.name === path[0]) {\n              if (path.length === 1) {\n                return {\n                  ...f,\n                  children: [...(f.children || []), newChild]\n                };\n              }\n              if (f.children) {\n                return {\n                  ...f,\n                  children: updateFolderChildren(f.children, path.slice(1), newChild)\n                };\n              }\n            }\n            return f;\n          });\n        };\n        setFolders(prev => updateFolderChildren(prev, currentPath, newFolder));\n      }\n      setNewFolderName(\"\");\n      setNewFolderDescription(\"\");\n      setOpenNewFolder(false);\n    } catch (err) {\n      console.error('Error creating folder:', err);\n      setError('Failed to create folder');\n    } finally {\n      setFolderLoading(false);\n    }\n  };\n\n  // Document upload\n  const handleTypeChange = event => {\n    const typeId = event.target.value === \"\" ? \"\" : Number(event.target.value);\n    setSelectedType(typeId);\n    setDocFields({});\n\n    // Set default document name and code from the document type\n    if (typeof typeId === 'number') {\n      const docType = documentTypes.find(t => t.id === typeId);\n      if (docType) {\n        const defaultName = `New ${docType.name}`;\n        const timestamp = Date.now();\n        const defaultCode = `${docType.code}_${timestamp}`;\n        setDocumentName(defaultName);\n        setDocumentCode(defaultCode);\n      }\n    } else {\n      setDocumentName(\"\");\n      setDocumentCode(\"\");\n    }\n  };\n  const handleFieldChange = (fieldKey, value) => {\n    setDocFields(prev => ({\n      ...prev,\n      [fieldKey]: value\n    }));\n  };\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setAttachment(event.target.files[0]);\n    }\n  };\n  const handleUpload = async event => {\n    event.preventDefault();\n    if (!selectedType || !(user !== null && user !== void 0 && user.companyId) || !documentName.trim() || !documentCode.trim()) return;\n    try {\n      setUploadLoading(true);\n      setError(null);\n\n      // Create document request with user-provided code\n      let documentRequest = {\n        name: documentName,\n        code: documentCode,\n        documentTypeId: selectedType,\n        companyId: user.companyId,\n        departmentId: user.departmentId,\n        folderId: currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.id,\n        fieldValues: docFields,\n        status: 'ACTIVE'\n      };\n\n      // Add file information if attachment is provided\n      if (attachment) {\n        documentRequest = documentService.prepareDocumentForUpload(documentRequest, attachment);\n      }\n      const newDocument = await documentService.createDocument(documentRequest);\n\n      // Add the document to the current folder's documents\n      if (currentFolder) {\n        setFolders(prev => {\n          const updateFolderDocuments = (folders, path, newDoc) => {\n            if (path.length === 0) return folders;\n            return folders.map(f => {\n              if (f.name === path[0]) {\n                if (path.length === 1) {\n                  return {\n                    ...f,\n                    documents: [...(f.documents || []), newDoc]\n                  };\n                }\n                if (f.children) {\n                  return {\n                    ...f,\n                    children: updateFolderDocuments(f.children, path.slice(1), newDoc)\n                  };\n                }\n              }\n              return f;\n            });\n          };\n          return updateFolderDocuments(prev, currentPath, newDocument);\n        });\n      }\n\n      // Reset form\n      setOpenUpload(false);\n      setSelectedType(\"\");\n      setDocFields({});\n      setAttachment(null);\n      setDocumentName(\"\");\n      setDocumentCode(\"\"); // Reset document code as well\n    } catch (err) {\n      console.error('Error uploading document:', err);\n      setError('Failed to upload document');\n    } finally {\n      setUploadLoading(false);\n    }\n  };\n\n  // View document\n  const handleViewDoc = doc => setViewDoc(doc);\n  const handleCloseViewDoc = () => setViewDoc(null);\n\n  // Get current folder data for display\n  const getCurrentFolderData = () => {\n    if (currentPath.length === 0) {\n      return {\n        folders,\n        documents: []\n      };\n    }\n    const folder = findFolderByPath(folders, currentPath);\n    return {\n      folders: (folder === null || folder === void 0 ? void 0 : folder.children) || [],\n      documents: (folder === null || folder === void 0 ? void 0 : folder.documents) || []\n    };\n  };\n  const {\n    folders: currentFolders,\n    documents: currentDocuments\n  } = getCurrentFolderData();\n  const selectedDocumentType = documentTypes.find(dt => dt.id === selectedType);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: 600,\n      mb: 4,\n      children: \"Document Archival\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setError(null),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        component: \"button\",\n        variant: \"body1\",\n        onClick: () => handleBack(),\n        sx: {\n          color: tokens.primary.main\n        },\n        children: \"Archival\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), currentPath.map((name, idx) => /*#__PURE__*/_jsxDEV(Link, {\n        component: \"button\",\n        variant: \"body1\",\n        onClick: () => handleBack(idx),\n        sx: {\n          color: tokens.primary.main\n        },\n        children: name\n      }, `${name}-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        gap: 2,\n        justifyContent: \"flex-end\",\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(NewFolderIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 22\n        }, this),\n        onClick: () => setOpenNewFolder(true),\n        disabled: loading,\n        children: \"New Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 22\n        }, this),\n        onClick: () => setOpenUpload(true),\n        disabled: loading || documentTypes.length === 0,\n        sx: {\n          bgcolor: tokens.primary.main,\n          \"&:hover\": {\n            bgcolor: tokens.primary.dark\n          }\n        },\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        p: 2,\n        backgroundColor: tokens.grey[100],\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [currentFolders.map(folder => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 2,\n              cursor: \"pointer\",\n              \"&:hover\": {\n                backgroundColor: tokens.grey[200]\n              }\n            },\n            onClick: () => handleFolderClick(folder),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 2,\n              children: [/*#__PURE__*/_jsxDEV(FolderIcon, {\n                sx: {\n                  color: tokens.secondary.main\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: folder.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 21\n                }, this), folder.description && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: folder.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)), currentDocuments.map(doc => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 2,\n              cursor: \"pointer\",\n              \"&:hover\": {\n                backgroundColor: tokens.grey[200]\n              }\n            },\n            onClick: () => handleViewDoc(doc),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 2,\n              children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n                sx: {\n                  color: tokens.primary.main\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: doc.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: doc.documentTypeName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this), doc.fileSize && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(doc.fileSize / 1024 / 1024).toFixed(2), \" MB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)\n        }, doc.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), currentFolders.length === 0 && currentDocuments.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        py: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No folders or documents found. Create a folder or upload a document to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openNewFolder,\n      onClose: () => setOpenNewFolder(false),\n      \"aria-labelledby\": \"new-folder-modal\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: 400,\n          bgcolor: \"background.paper\",\n          boxShadow: 24,\n          p: 4,\n          borderRadius: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Create New Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setOpenNewFolder(false),\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Folder Name\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          margin: \"normal\",\n          required: true,\n          error: !newFolderName.trim() && newFolderName.length > 0,\n          helperText: !newFolderName.trim() && newFolderName.length > 0 ? \"Folder name is required\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description (Optional)\",\n          value: newFolderDescription,\n          onChange: e => setNewFolderDescription(e.target.value),\n          margin: \"normal\",\n          multiline: true,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            gap: 2,\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => setOpenNewFolder(false),\n            fullWidth: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleCreateFolder,\n            disabled: !newFolderName.trim() || folderLoading,\n            fullWidth: true,\n            sx: {\n              bgcolor: tokens.primary.main,\n              \"&:hover\": {\n                bgcolor: tokens.primary.dark\n              }\n            },\n            children: folderLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 32\n            }, this) : \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openUpload,\n      onClose: () => setOpenUpload(false),\n      \"aria-labelledby\": \"upload-document-modal\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: 500,\n          bgcolor: \"background.paper\",\n          boxShadow: 24,\n          p: 4,\n          borderRadius: 2,\n          maxHeight: '90vh',\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Upload Document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setOpenUpload(false),\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpload,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Document Name\",\n            value: documentName,\n            onChange: e => setDocumentName(e.target.value),\n            margin: \"normal\",\n            required: true,\n            error: !documentName.trim() && documentName.length > 0,\n            helperText: !documentName.trim() && documentName.length > 0 ? \"Document name is required\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Document Code\",\n            value: documentCode,\n            onChange: e => setDocumentCode(e.target.value),\n            margin: \"normal\",\n            required: true,\n            error: !documentCode.trim() && documentCode.length > 0,\n            helperText: !documentCode.trim() && documentCode.length > 0 ? \"Document code is required\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            fullWidth: true,\n            label: \"Document Type\",\n            value: selectedType,\n            onChange: handleTypeChange,\n            margin: \"normal\",\n            required: true,\n            error: !selectedType,\n            helperText: !selectedType ? \"Please select a document type\" : \"\",\n            children: documentTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type.id,\n              children: type.name\n            }, type.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), selectedDocumentType && selectedDocumentType.fields.map(field => {\n            var _field$options;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              label: field.name + (field.required ? ' *' : ''),\n              fullWidth: true,\n              margin: \"normal\",\n              type: field.fieldType === 'NUMBER' ? 'number' : field.fieldType === 'DATE' ? 'date' : field.fieldType === 'EMAIL' ? 'email' : 'text',\n              multiline: field.fieldType === 'TEXTAREA',\n              rows: field.fieldType === 'TEXTAREA' ? 3 : 1,\n              select: field.fieldType === 'SELECT',\n              value: docFields[field.fieldKey] || field.defaultValue || '',\n              onChange: e => handleFieldChange(field.fieldKey, e.target.value),\n              required: field.required,\n              helperText: field.description,\n              InputLabelProps: field.fieldType === 'DATE' ? {\n                shrink: true\n              } : undefined,\n              children: field.fieldType === 'SELECT' && ((_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 19\n              }, this)))\n            }, field.fieldKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"*/*\",\n            style: {\n              display: \"none\"\n            },\n            id: \"attachment-input\",\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"attachment-input\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              component: \"span\",\n              fullWidth: true,\n              sx: {\n                mt: 2\n              },\n              children: attachment ? `Selected: ${attachment.name}` : \"Select File (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), attachment && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"File: \", attachment.name, \" (\", (attachment.size / 1024 / 1024).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              gap: 2,\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => setOpenUpload(false),\n              fullWidth: true,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              disabled: !selectedType || !documentName.trim() || !documentCode.trim() || uploadLoading,\n              fullWidth: true,\n              sx: {\n                bgcolor: tokens.primary.main,\n                \"&:hover\": {\n                  bgcolor: tokens.primary.dark\n                }\n              },\n              children: uploadLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 34\n              }, this) : \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: !!viewDoc,\n      onClose: handleCloseViewDoc,\n      \"aria-labelledby\": \"view-document-modal\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: 500,\n          bgcolor: \"background.paper\",\n          boxShadow: 24,\n          p: 4,\n          borderRadius: 2,\n          maxHeight: '90vh',\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: viewDoc === null || viewDoc === void 0 ? void 0 : viewDoc.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleCloseViewDoc,\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), viewDoc && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Document Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this), \" \", viewDoc.documentTypeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 15\n          }, this), viewDoc.metadata && Object.entries(viewDoc.metadata).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 19\n            }, this), \" \", value === null || value === void 0 ? void 0 : value.toString()]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              pt: 2,\n              borderTop: 1,\n              borderColor: 'divider'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"File:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 19\n              }, this), \" \", viewDoc.filePath || 'No file attached']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this), viewDoc.fileSize && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Size:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 21\n              }, this), \" \", (viewDoc.fileSize / 1024 / 1024).toFixed(2), \" MB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 19\n              }, this), \" \", viewDoc.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 19\n              }, this), \" \", viewDoc.createdAt ? new Date(viewDoc.createdAt).toLocaleString() : 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchivalPage, \"vgn/nsOYnId/ukYDpp+G0F3pT0s=\", false, function () {\n  return [useAuth];\n});\n_c = ArchivalPage;\nexport default ArchivalPage;\nvar _c;\n$RefreshReg$(_c, \"ArchivalPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Paper","Grid","Breadcrumbs","Link","Modal","TextField","MenuItem","IconButton","Alert","CircularProgress","Add","AddIcon","Close","CloseIcon","Folder","FolderIcon","InsertDriveFile","FileIcon","CreateNewFolder","NewFolderIcon","tokens","useAuth","folderService","documentService","documentTypeService","jsxDEV","_jsxDEV","findFolderByPath","folders","path","length","undefined","folder","name","children","slice","ArchivalPage","_s","user","setFolders","currentPath","setCurrentPath","currentFolder","setCurrentFolder","documentTypes","setDocumentTypes","openUpload","setOpenUpload","openNewFolder","setOpenNewFolder","viewDoc","setViewDoc","selectedType","setSelectedType","attachment","setAttachment","docFields","setDocFields","newFolderName","setNewFolderName","newFolderDescription","setNewFolderDescription","documentName","setDocumentName","documentCode","setDocumentCode","loading","setLoading","uploadLoading","setUploadLoading","folderLoading","setFolderLoading","error","setError","loadInitialData","companyId","foldersData","documentTypesData","Promise","all","getRootFoldersByCompany","getDocumentTypesByCompany","err","console","handleFolderClick","folderWithContents","getFolderContents","id","updateFolderInTree","targetId","newData","map","f","prev","handleBack","idx","handleCreateFolder","trim","folderRequest","description","departmentId","parentId","newFolder","createFolder","updateFolderChildren","newChild","handleTypeChange","event","typeId","target","value","Number","docType","find","t","defaultName","timestamp","Date","now","defaultCode","code","handleFieldChange","fieldKey","handleFileChange","files","handleUpload","preventDefault","documentRequest","documentTypeId","folderId","fieldValues","status","prepareDocumentForUpload","newDocument","createDocument","updateFolderDocuments","newDoc","documents","handleViewDoc","doc","handleCloseViewDoc","getCurrentFolderData","currentFolders","currentDocuments","selectedDocumentType","dt","display","justifyContent","alignItems","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","width","boxSizing","p","variant","fontWeight","mb","severity","sx","onClose","component","onClick","color","primary","main","gap","startIcon","disabled","bgcolor","dark","elevation","backgroundColor","grey","borderRadius","container","spacing","item","xs","sm","md","cursor","secondary","documentTypeName","fileSize","toFixed","textAlign","py","open","position","top","left","transform","boxShadow","size","fullWidth","label","onChange","e","margin","required","helperText","multiline","rows","mt","maxHeight","overflow","onSubmit","select","type","fields","field","_field$options","fieldType","defaultValue","InputLabelProps","shrink","options","option","accept","style","htmlFor","metadata","Object","entries","key","toString","pt","borderTop","borderColor","filePath","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/pages/Archival/ArchivalPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Link,\r\n  Modal,\r\n  TextField,\r\n  MenuItem,\r\n  IconButton,\r\n  Alert,\r\n  CircularProgress,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport {\r\n  Add as AddIcon,\r\n  Close as CloseIcon,\r\n  Folder as FolderIcon,\r\n  InsertDriveFile as FileIcon,\r\n  CreateNewFolder as NewFolderIcon,\r\n} from \"@mui/icons-material\";\r\nimport { tokens } from \"../../theme/theme\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { \r\n  folderService, \r\n  documentService, \r\n  documentTypeService,\r\n  Folder, \r\n  Document, \r\n  DocumentType, \r\n  CreateFolderRequest, \r\n  CreateDocumentRequest \r\n} from \"../../services/api\";\r\n\r\n// Helper function to find folder by path\r\nconst findFolderByPath = (folders: Folder[], path: string[]): Folder | undefined => {\r\n  if (path.length === 0) return undefined;\r\n  \r\n  for (const folder of folders) {\r\n    if (folder.name === path[0]) {\r\n      if (path.length === 1) return folder;\r\n      if (folder.children) {\r\n        return findFolderByPath(folder.children, path.slice(1));\r\n      }\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\nconst ArchivalPage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  \r\n  // State for folders and navigation\r\n  const [folders, setFolders] = useState<Folder[]>([]);\r\n  const [currentPath, setCurrentPath] = useState<string[]>([]);\r\n  const [currentFolder, setCurrentFolder] = useState<Folder | null>(null);\r\n  \r\n  // State for document types\r\n  const [documentTypes, setDocumentTypes] = useState<DocumentType[]>([]);\r\n  \r\n  // Modal states\r\n  const [openUpload, setOpenUpload] = useState(false);\r\n  const [openNewFolder, setOpenNewFolder] = useState(false);\r\n  const [viewDoc, setViewDoc] = useState<Document | null>(null);\r\n  \r\n  // Form states\r\n  const [selectedType, setSelectedType] = useState<number | \"\">(\"\");\r\n  const [attachment, setAttachment] = useState<File | null>(null);\r\n  const [docFields, setDocFields] = useState<{ [key: string]: any }>({});\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n  const [newFolderDescription, setNewFolderDescription] = useState(\"\");\r\n  const [documentName, setDocumentName] = useState(\"\");\r\n  const [documentCode, setDocumentCode] = useState(\"\");\r\n  \r\n  // Loading and error states\r\n  const [loading, setLoading] = useState(true);\r\n  const [uploadLoading, setUploadLoading] = useState(false);\r\n  const [folderLoading, setFolderLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      if (!user?.companyId) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Load root folders and document types in parallel\r\n        const [foldersData, documentTypesData] = await Promise.all([\r\n          folderService.getRootFoldersByCompany(user.companyId),\r\n          documentTypeService.getDocumentTypesByCompany(user.companyId)\r\n        ]);\r\n        \r\n        setFolders(foldersData);\r\n        setDocumentTypes(documentTypesData);\r\n      } catch (err) {\r\n        console.error('Error loading data:', err);\r\n        setError('Failed to load folders and document types');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n  }, [user?.companyId]);\r\n\r\n  // Update current folder when path changes\r\n  useEffect(() => {\r\n    if (currentPath.length === 0) {\r\n      setCurrentFolder(null);\r\n    } else {\r\n      const folder = findFolderByPath(folders, currentPath);\r\n      setCurrentFolder(folder || null);\r\n    }\r\n  }, [currentPath, folders]);\r\n\r\n  // Folder navigation\r\n  const handleFolderClick = async (folder: Folder) => {\r\n    try {\r\n      setLoading(true);\r\n      // Get folder contents including documents\r\n      const folderWithContents = await folderService.getFolderContents(folder.id);\r\n      \r\n      // Update the folder in our state with the new contents\r\n      const updateFolderInTree = (folders: Folder[], targetId: number, newData: Folder): Folder[] => {\r\n        return folders.map(f => {\r\n          if (f.id === targetId) {\r\n            return { ...f, ...newData };\r\n          }\r\n          if (f.children) {\r\n            return { ...f, children: updateFolderInTree(f.children, targetId, newData) };\r\n          }\r\n          return f;\r\n        });\r\n      };\r\n      \r\n      setFolders(prev => updateFolderInTree(prev, folder.id, folderWithContents));\r\n      setCurrentPath([...currentPath, folder.name]);\r\n    } catch (err) {\r\n      console.error('Error loading folder contents:', err);\r\n      setError('Failed to load folder contents');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = (idx?: number) => {\r\n    if (typeof idx === \"number\") {\r\n      setCurrentPath(currentPath.slice(0, idx + 1));\r\n    } else {\r\n      setCurrentPath([]);\r\n    }\r\n  };\r\n\r\n  // Create new folder\r\n  const handleCreateFolder = async () => {\r\n    if (!newFolderName.trim() || !user?.companyId) return;\r\n    \r\n    try {\r\n      setFolderLoading(true);\r\n      setError(null);\r\n      \r\n      const folderRequest: CreateFolderRequest = {\r\n        name: newFolderName,\r\n        description: newFolderDescription,\r\n        companyId: user.companyId,\r\n        departmentId: user.departmentId,\r\n        parentId: currentFolder?.id,\r\n      };\r\n      \r\n      const newFolder = await folderService.createFolder(folderRequest);\r\n      \r\n      // Add the new folder to the appropriate location in our state\r\n      if (currentPath.length === 0) {\r\n        // Adding to root\r\n        setFolders(prev => [...prev, newFolder]);\r\n      } else {\r\n        // Adding to current folder\r\n        const updateFolderChildren = (folders: Folder[], path: string[], newChild: Folder): Folder[] => {\r\n          if (path.length === 0) return folders;\r\n          \r\n          return folders.map(f => {\r\n            if (f.name === path[0]) {\r\n              if (path.length === 1) {\r\n                return { ...f, children: [...(f.children || []), newChild] };\r\n              }\r\n              if (f.children) {\r\n                return { ...f, children: updateFolderChildren(f.children, path.slice(1), newChild) };\r\n              }\r\n            }\r\n            return f;\r\n          });\r\n        };\r\n        \r\n        setFolders(prev => updateFolderChildren(prev, currentPath, newFolder));\r\n      }\r\n      \r\n      setNewFolderName(\"\");\r\n      setNewFolderDescription(\"\");\r\n      setOpenNewFolder(false);\r\n    } catch (err) {\r\n      console.error('Error creating folder:', err);\r\n      setError('Failed to create folder');\r\n    } finally {\r\n      setFolderLoading(false);\r\n    }\r\n  };\r\n\r\n  // Document upload\r\n  const handleTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const typeId = event.target.value === \"\" ? \"\" : Number(event.target.value);\r\n    setSelectedType(typeId);\r\n    setDocFields({});\r\n    \r\n    // Set default document name and code from the document type\r\n    if (typeof typeId === 'number') {\r\n      const docType = documentTypes.find(t => t.id === typeId);\r\n      if (docType) {\r\n        const defaultName = `New ${docType.name}`;\r\n        const timestamp = Date.now();\r\n        const defaultCode = `${docType.code}_${timestamp}`;\r\n        \r\n        setDocumentName(defaultName);\r\n        setDocumentCode(defaultCode);\r\n      }\r\n    } else {\r\n      setDocumentName(\"\");\r\n      setDocumentCode(\"\");\r\n    }\r\n  };\r\n\r\n  const handleFieldChange = (fieldKey: string, value: any) => {\r\n    setDocFields(prev => ({ ...prev, [fieldKey]: value }));\r\n  };\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setAttachment(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (!selectedType || !user?.companyId || !documentName.trim() || !documentCode.trim()) return;\r\n    \r\n    try {\r\n      setUploadLoading(true);\r\n      setError(null);\r\n      \r\n      // Create document request with user-provided code\r\n      let documentRequest: CreateDocumentRequest = {\r\n        name: documentName,\r\n        code: documentCode,\r\n        documentTypeId: selectedType as number,\r\n        companyId: user.companyId,\r\n        departmentId: user.departmentId,\r\n        folderId: currentFolder?.id,\r\n        fieldValues: docFields,\r\n        status: 'ACTIVE',\r\n      };\r\n      \r\n      // Add file information if attachment is provided\r\n      if (attachment) {\r\n        documentRequest = documentService.prepareDocumentForUpload(documentRequest, attachment);\r\n      }\r\n      \r\n      const newDocument = await documentService.createDocument(documentRequest);\r\n      \r\n      // Add the document to the current folder's documents\r\n      if (currentFolder) {\r\n        setFolders(prev => {\r\n          const updateFolderDocuments = (folders: Folder[], path: string[], newDoc: Document): Folder[] => {\r\n            if (path.length === 0) return folders;\r\n            \r\n            return folders.map(f => {\r\n              if (f.name === path[0]) {\r\n                if (path.length === 1) {\r\n                  return { ...f, documents: [...(f.documents || []), newDoc] };\r\n                }\r\n                if (f.children) {\r\n                  return { ...f, children: updateFolderDocuments(f.children, path.slice(1), newDoc) };\r\n                }\r\n              }\r\n              return f;\r\n            });\r\n          };\r\n          \r\n          return updateFolderDocuments(prev, currentPath, newDocument);\r\n        });\r\n      }\r\n      \r\n      // Reset form\r\n      setOpenUpload(false);\r\n      setSelectedType(\"\");\r\n      setDocFields({});\r\n      setAttachment(null);\r\n      setDocumentName(\"\");\r\n      setDocumentCode(\"\"); // Reset document code as well\r\n    } catch (err) {\r\n      console.error('Error uploading document:', err);\r\n      setError('Failed to upload document');\r\n    } finally {\r\n      setUploadLoading(false);\r\n    }\r\n  };\r\n\r\n  // View document\r\n  const handleViewDoc = (doc: Document) => setViewDoc(doc);\r\n  const handleCloseViewDoc = () => setViewDoc(null);\r\n\r\n  // Get current folder data for display\r\n  const getCurrentFolderData = () => {\r\n    if (currentPath.length === 0) {\r\n      return { folders, documents: [] };\r\n    }\r\n    \r\n    const folder = findFolderByPath(folders, currentPath);\r\n    return {\r\n      folders: folder?.children || [],\r\n      documents: folder?.documents || []\r\n    };\r\n  };\r\n\r\n  const { folders: currentFolders, documents: currentDocuments } = getCurrentFolderData();\r\n  const selectedDocumentType = documentTypes.find(dt => dt.id === selectedType);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box width=\"100%\" boxSizing=\"border-box\" p={3}>\r\n      <Typography variant=\"h4\" fontWeight={600} mb={4}>\r\n        Document Archival\r\n      </Typography>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Breadcrumbs */}\r\n      <Breadcrumbs sx={{ mb: 2 }}>\r\n        <Link\r\n          component=\"button\"\r\n          variant=\"body1\"\r\n          onClick={() => handleBack()}\r\n          sx={{ color: tokens.primary.main }}\r\n        >\r\n          Archival\r\n        </Link>\r\n        {currentPath.map((name, idx) => (\r\n          <Link\r\n            key={`${name}-${idx}`}\r\n            component=\"button\"\r\n            variant=\"body1\"\r\n            onClick={() => handleBack(idx)}\r\n            sx={{ color: tokens.primary.main }}\r\n          >\r\n            {name}\r\n          </Link>\r\n        ))}\r\n      </Breadcrumbs>\r\n\r\n      {/* Action Buttons */}\r\n      <Box sx={{ display: \"flex\", gap: 2, justifyContent: \"flex-end\", mb: 2 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<NewFolderIcon />}\r\n          onClick={() => setOpenNewFolder(true)}\r\n          disabled={loading}\r\n        >\r\n          New Folder\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => setOpenUpload(true)}\r\n          disabled={loading || documentTypes.length === 0}\r\n          sx={{\r\n            bgcolor: tokens.primary.main,\r\n            \"&:hover\": { bgcolor: tokens.primary.dark },\r\n          }}\r\n        >\r\n          Upload Document\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Folders and Documents Grid */}\r\n      <Paper\r\n        elevation={0}\r\n        sx={{ p: 2, backgroundColor: tokens.grey[100], borderRadius: 2 }}\r\n      >\r\n        <Grid container spacing={2}>\r\n          {currentFolders.map((folder) => (\r\n            <Grid item xs={12} sm={6} md={4} key={folder.id}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 2,\r\n                  cursor: \"pointer\",\r\n                  \"&:hover\": { backgroundColor: tokens.grey[200] },\r\n                }}\r\n                onClick={() => handleFolderClick(folder)}\r\n              >\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n                  <FolderIcon sx={{ color: tokens.secondary.main }} />\r\n                  <Box>\r\n                    <Typography>{folder.name}</Typography>\r\n                    {folder.description && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {folder.description}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n          \r\n          {currentDocuments.map((doc) => (\r\n            <Grid item xs={12} sm={6} md={4} key={doc.id}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 2,\r\n                  cursor: \"pointer\",\r\n                  \"&:hover\": { backgroundColor: tokens.grey[200] },\r\n                }}\r\n                onClick={() => handleViewDoc(doc)}\r\n              >\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n                  <FileIcon sx={{ color: tokens.primary.main }} />\r\n                  <Box>\r\n                    <Typography>{doc.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {doc.documentTypeName}\r\n                    </Typography>\r\n                    {doc.fileSize && (\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {(doc.fileSize / 1024 / 1024).toFixed(2)} MB\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        {currentFolders.length === 0 && currentDocuments.length === 0 && (\r\n          <Box textAlign=\"center\" py={4}>\r\n            <Typography color=\"text.secondary\">\r\n              No folders or documents found. Create a folder or upload a document to get started.\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* New Folder Dialog */}\r\n      <Modal\r\n        open={openNewFolder}\r\n        onClose={() => setOpenNewFolder(false)}\r\n        aria-labelledby=\"new-folder-modal\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 400,\r\n            bgcolor: \"background.paper\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n            borderRadius: 2,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              Create New Folder\r\n            </Typography>\r\n            <IconButton onClick={() => setOpenNewFolder(false)} size=\"small\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n          \r\n          <TextField\r\n            fullWidth\r\n            label=\"Folder Name\"\r\n            value={newFolderName}\r\n            onChange={(e) => setNewFolderName(e.target.value)}\r\n            margin=\"normal\"\r\n            required\r\n            error={!newFolderName.trim() && newFolderName.length > 0}\r\n            helperText={!newFolderName.trim() && newFolderName.length > 0 ? \"Folder name is required\" : \"\"}\r\n          />\r\n          \r\n          <TextField\r\n            fullWidth\r\n            label=\"Description (Optional)\"\r\n            value={newFolderDescription}\r\n            onChange={(e) => setNewFolderDescription(e.target.value)}\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n          \r\n          <Box sx={{ display: \"flex\", gap: 2, mt: 3 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => setOpenNewFolder(false)}\r\n              fullWidth\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleCreateFolder}\r\n              disabled={!newFolderName.trim() || folderLoading}\r\n              fullWidth\r\n              sx={{\r\n                bgcolor: tokens.primary.main,\r\n                \"&:hover\": { bgcolor: tokens.primary.dark },\r\n              }}\r\n            >\r\n              {folderLoading ? <CircularProgress size={20} /> : \"Create\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n\r\n      {/* Upload Document Modal */}\r\n      <Modal\r\n        open={openUpload}\r\n        onClose={() => setOpenUpload(false)}\r\n        aria-labelledby=\"upload-document-modal\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 500,\r\n            bgcolor: \"background.paper\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n            borderRadius: 2,\r\n            maxHeight: '90vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              Upload Document\r\n            </Typography>\r\n            <IconButton onClick={() => setOpenUpload(false)} size=\"small\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n          \r\n          <form onSubmit={handleUpload}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Document Name\"\r\n              value={documentName}\r\n              onChange={(e) => setDocumentName(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              error={!documentName.trim() && documentName.length > 0}\r\n              helperText={!documentName.trim() && documentName.length > 0 ? \"Document name is required\" : \"\"}\r\n            />\r\n            \r\n            <TextField\r\n              fullWidth\r\n              label=\"Document Code\"\r\n              value={documentCode}\r\n              onChange={(e) => setDocumentCode(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              error={!documentCode.trim() && documentCode.length > 0}\r\n              helperText={!documentCode.trim() && documentCode.length > 0 ? \"Document code is required\" : \"\"}\r\n            />\r\n\r\n            <TextField\r\n              select\r\n              fullWidth\r\n              label=\"Document Type\"\r\n              value={selectedType}\r\n              onChange={handleTypeChange}\r\n              margin=\"normal\"\r\n              required\r\n              error={!selectedType}\r\n              helperText={!selectedType ? \"Please select a document type\" : \"\"}\r\n            >\r\n              {documentTypes.map((type) => (\r\n                <MenuItem key={type.id} value={type.id}>\r\n                  {type.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            \r\n            {/* Dynamic fields for document type */}\r\n            {selectedDocumentType && selectedDocumentType.fields.map((field) => (\r\n              <TextField\r\n                key={field.fieldKey}\r\n                label={field.name + (field.required ? ' *' : '')}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                type={field.fieldType === 'NUMBER' ? 'number' : \r\n                      field.fieldType === 'DATE' ? 'date' : \r\n                      field.fieldType === 'EMAIL' ? 'email' : 'text'}\r\n                multiline={field.fieldType === 'TEXTAREA'}\r\n                rows={field.fieldType === 'TEXTAREA' ? 3 : 1}\r\n                select={field.fieldType === 'SELECT'}\r\n                value={docFields[field.fieldKey] || field.defaultValue || ''}\r\n                onChange={(e) => handleFieldChange(field.fieldKey, e.target.value)}\r\n                required={field.required}\r\n                helperText={field.description}\r\n                InputLabelProps={field.fieldType === 'DATE' ? { shrink: true } : undefined}\r\n              >\r\n                {field.fieldType === 'SELECT' && field.options?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            ))}\r\n            \r\n            <input\r\n              accept=\"*/*\"\r\n              style={{ display: \"none\" }}\r\n              id=\"attachment-input\"\r\n              type=\"file\"\r\n              onChange={handleFileChange}\r\n            />\r\n            <label htmlFor=\"attachment-input\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                fullWidth\r\n                sx={{ mt: 2 }}\r\n              >\r\n                {attachment ? `Selected: ${attachment.name}` : \"Select File (Optional)\"}\r\n              </Button>\r\n            </label>\r\n            \r\n            {attachment && (\r\n              <Box sx={{ mt: 1 }}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  File: {attachment.name} ({(attachment.size / 1024 / 1024).toFixed(2)} MB)\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n            \r\n            <Box sx={{ display: \"flex\", gap: 2, mt: 3 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => setOpenUpload(false)}\r\n                fullWidth\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={!selectedType || !documentName.trim() || !documentCode.trim() || uploadLoading}\r\n                fullWidth\r\n                sx={{\r\n                  bgcolor: tokens.primary.main,\r\n                  \"&:hover\": { bgcolor: tokens.primary.dark },\r\n                }}\r\n              >\r\n                {uploadLoading ? <CircularProgress size={20} /> : \"Upload\"}\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n\r\n      {/* View Document Modal */}\r\n      <Modal\r\n        open={!!viewDoc}\r\n        onClose={handleCloseViewDoc}\r\n        aria-labelledby=\"view-document-modal\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 500,\r\n            bgcolor: \"background.paper\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n            borderRadius: 2,\r\n            maxHeight: '90vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {viewDoc?.name}\r\n            </Typography>\r\n            <IconButton onClick={handleCloseViewDoc} size=\"small\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n          \r\n          {viewDoc && (\r\n            <Box>\r\n              <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\r\n                <strong>Document Type:</strong> {viewDoc.documentTypeName}\r\n              </Typography>\r\n              \r\n              {viewDoc.metadata && Object.entries(viewDoc.metadata).map(([key, value]) => (\r\n                <Typography key={key} variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <strong>{key}:</strong> {value?.toString()}\r\n                </Typography>\r\n              ))}\r\n              \r\n              <Box sx={{ mt: 2, pt: 2, borderTop: 1, borderColor: 'divider' }}>\r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <strong>File:</strong> {viewDoc.filePath || 'No file attached'}\r\n                </Typography>\r\n                {viewDoc.fileSize && (\r\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                    <strong>Size:</strong> {(viewDoc.fileSize / 1024 / 1024).toFixed(2)} MB\r\n                  </Typography>\r\n                )}\r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <strong>Status:</strong> {viewDoc.status}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <strong>Created:</strong> {viewDoc.createdAt ? new Date(viewDoc.createdAt).toLocaleString() : 'Unknown'}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ArchivalPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
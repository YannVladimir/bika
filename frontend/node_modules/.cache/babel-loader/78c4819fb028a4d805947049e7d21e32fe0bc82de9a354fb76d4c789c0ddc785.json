{"ast":null,"code":"import React from\"react\";import{Navigate,useLocation}from\"react-router-dom\";import{useAuth,useIsAuthenticated,useHasRole,useIsAdmin}from\"../../context/AuthContext\";import LoadingOverlay from\"../common/LoadingOverlay\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requiredRole,requireAdmin=false,redirectTo=\"/login\"}=_ref;const{state}=useAuth();const isAuthenticated=useIsAuthenticated();const isAdmin=useIsAdmin();const hasRole=useHasRole(requiredRole||\"\");const location=useLocation();// Show loading overlay while checking authentication\nif(state.isLoading){return/*#__PURE__*/_jsx(LoadingOverlay,{open:true,message:\"Checking authentication...\"});}// Redirect to login if not authenticated\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:redirectTo,state:{from:location},replace:true});}// Check admin requirement\nif(requireAdmin&&!isAdmin){return/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\",state:{from:location},replace:true});}// Check specific role requirement\nif(requiredRole&&!hasRole&&!isAdmin){return/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\",state:{from:location},replace:true});}// User is authenticated and has required permissions\nreturn/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
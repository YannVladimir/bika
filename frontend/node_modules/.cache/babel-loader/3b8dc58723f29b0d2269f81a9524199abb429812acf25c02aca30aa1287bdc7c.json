{"ast":null,"code":"import apiClient from './client';\nclass CompanyService {\n  async getCompanies() {\n    const response = await apiClient.get('/v1/companies');\n    return response.data;\n  }\n  async getCompanyById(id) {\n    const response = await apiClient.get(`/v1/companies/${id}`);\n    return response.data;\n  }\n  async createCompany(companyData) {\n    const response = await apiClient.post('/v1/companies', companyData);\n    return response.data;\n  }\n  async updateCompany(id, companyData) {\n    const response = await apiClient.put(`/v1/companies/${id}`, companyData);\n    return response.data;\n  }\n  async deleteCompany(id) {\n    await apiClient.delete(`/v1/companies/${id}`);\n  }\n}\nconst companyService = new CompanyService();\nexport default companyService;","map":{"version":3,"names":["apiClient","CompanyService","getCompanies","response","get","data","getCompanyById","id","createCompany","companyData","post","updateCompany","put","deleteCompany","delete","companyService"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/services/api/companyService.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { Company, CreateCompanyRequest } from './types';\r\n\r\nclass CompanyService {\r\n  async getCompanies(): Promise<Company[]> {\r\n    const response = await apiClient.get<Company[]>('/v1/companies');\r\n    return response.data;\r\n  }\r\n\r\n  async getCompanyById(id: number): Promise<Company> {\r\n    const response = await apiClient.get<Company>(`/v1/companies/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async createCompany(companyData: CreateCompanyRequest): Promise<Company> {\r\n    const response = await apiClient.post<Company>('/v1/companies', companyData);\r\n    return response.data;\r\n  }\r\n\r\n  async updateCompany(id: number, companyData: CreateCompanyRequest): Promise<Company> {\r\n    const response = await apiClient.put<Company>(`/v1/companies/${id}`, companyData);\r\n    return response.data;\r\n  }\r\n\r\n  async deleteCompany(id: number): Promise<void> {\r\n    await apiClient.delete(`/v1/companies/${id}`);\r\n  }\r\n}\r\n\r\nconst companyService = new CompanyService();\r\nexport default companyService; "],"mappings":"AAAA,OAAOA,SAAS,MAAM,UAAU;AAGhC,MAAMC,cAAc,CAAC;EACnB,MAAMC,YAAYA,CAAA,EAAuB;IACvC,MAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAY,eAAe,CAAC;IAChE,OAAOD,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,cAAcA,CAACC,EAAU,EAAoB;IACjD,MAAMJ,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAU,iBAAiBG,EAAE,EAAE,CAAC;IACpE,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMG,aAAaA,CAACC,WAAiC,EAAoB;IACvE,MAAMN,QAAQ,GAAG,MAAMH,SAAS,CAACU,IAAI,CAAU,eAAe,EAAED,WAAW,CAAC;IAC5E,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMM,aAAaA,CAACJ,EAAU,EAAEE,WAAiC,EAAoB;IACnF,MAAMN,QAAQ,GAAG,MAAMH,SAAS,CAACY,GAAG,CAAU,iBAAiBL,EAAE,EAAE,EAAEE,WAAW,CAAC;IACjF,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMQ,aAAaA,CAACN,EAAU,EAAiB;IAC7C,MAAMP,SAAS,CAACc,MAAM,CAAC,iBAAiBP,EAAE,EAAE,CAAC;EAC/C;AACF;AAEA,MAAMQ,cAAc,GAAG,IAAId,cAAc,CAAC,CAAC;AAC3C,eAAec,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yann\\\\Desktop\\\\biakasystem\\\\frontend\\\\src\\\\theme\\\\ThemeProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { getTheme } from \"./theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  mode: \"light\",\n  toggleTheme: () => {}\n});\nexport const useThemeContext = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useThemeContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [mode, setMode] = useState(\"light\");\n  useEffect(() => {\n    const savedMode = localStorage.getItem(\"themeMode\");\n    if (savedMode === \"light\" || savedMode === \"dark\") {\n      setMode(savedMode);\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newMode = mode === \"light\" ? \"dark\" : \"light\";\n    setMode(newMode);\n    localStorage.setItem(\"themeMode\", newMode);\n  };\n  const theme = getTheme(mode);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"qqGqSz4bBmczl08gomeJvvpne7Y=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ThemeProvider","MuiThemeProvider","CssBaseline","getTheme","jsxDEV","_jsxDEV","ThemeContext","mode","toggleTheme","useThemeContext","_s","children","_s2","setMode","savedMode","localStorage","getItem","newMode","setItem","theme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yann/Desktop/biakasystem/frontend/src/theme/ThemeProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { getTheme } from \"./theme\";\r\nimport { Theme } from \"@mui/material/styles\";\r\n\r\ntype ThemeContextType = {\r\n  mode: \"light\" | \"dark\";\r\n  toggleTheme: () => void;\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType>({\r\n  mode: \"light\",\r\n  toggleTheme: () => {},\r\n});\r\n\r\nexport const useThemeContext = () => useContext(ThemeContext);\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [mode, setMode] = useState<\"light\" | \"dark\">(\"light\");\r\n\r\n  useEffect(() => {\r\n    const savedMode = localStorage.getItem(\"themeMode\");\r\n    if (savedMode === \"light\" || savedMode === \"dark\") {\r\n      setMode(savedMode);\r\n    }\r\n  }, []);\r\n\r\n  const toggleTheme = () => {\r\n    const newMode = mode === \"light\" ? \"dark\" : \"light\";\r\n    setMode(newMode);\r\n    localStorage.setItem(\"themeMode\", newMode);\r\n  };\r\n\r\n  const theme = getTheme(mode);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ mode, toggleTheme }}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,aAAa,IAAIC,gBAAgB,QAAQ,sBAAsB;AACxE,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,QAAQ,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnC,MAAMC,YAAY,gBAAGV,aAAa,CAAmB;EACnDW,IAAI,EAAE,OAAO;EACbC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMb,UAAU,CAACS,YAAY,CAAC;AAAA;AAACI,EAAA,CAAjDD,eAAe;AAE5B,OAAO,MAAMT,aAAsD,GAAGA,CAAC;EACrEW;AACF,CAAC,KAAK;EAAAC,GAAA;EACJ,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGf,QAAQ,CAAmB,OAAO,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAIF,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,MAAM,EAAE;MACjDD,OAAO,CAACC,SAAS,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMN,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMS,OAAO,GAAGV,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACnDM,OAAO,CAACI,OAAO,CAAC;IAChBF,YAAY,CAACG,OAAO,CAAC,WAAW,EAAED,OAAO,CAAC;EAC5C,CAAC;EAED,MAAME,KAAK,GAAGhB,QAAQ,CAACI,IAAI,CAAC;EAE5B,oBACEF,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEC;IAAY,CAAE;IAAAG,QAAA,eAClDN,OAAA,CAACJ,gBAAgB;MAACkB,KAAK,EAAEA,KAAM;MAAAR,QAAA,gBAC7BN,OAAA,CAACH,WAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACdd,QAAQ;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE5B,CAAC;AAACb,GAAA,CA5BWZ,aAAsD;AAAA0B,EAAA,GAAtD1B,aAAsD;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
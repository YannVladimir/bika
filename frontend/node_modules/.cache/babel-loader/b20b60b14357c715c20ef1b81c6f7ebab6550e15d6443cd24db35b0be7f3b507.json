{"ast":null,"code":"import apiClient from'./client';class DocumentTypeService{async getDocumentTypes(){const response=await apiClient.get('/v1/document-types');return response.data;}async getDocumentTypesByCompany(companyId){const response=await apiClient.get(\"/v1/document-types/company/\".concat(companyId));return response.data;}async getDocumentTypeById(id){const response=await apiClient.get(\"/v1/document-types/\".concat(id));return response.data;}async createDocumentType(documentTypeData){const response=await apiClient.post('/v1/document-types',documentTypeData);return response.data;}async updateDocumentType(id,documentTypeData){const response=await apiClient.put(\"/v1/document-types/\".concat(id),documentTypeData);return response.data;}async deleteDocumentType(id){await apiClient.delete(\"/v1/document-types/\".concat(id));}// Helper method to generate field key from name\ngenerateFieldKey(name){return name.toLowerCase().replace(/[^a-z0-9\\s]/g,'')// Remove special characters\n.replace(/\\s+/g,'_')// Replace spaces with underscores\n.trim();}// Helper method to create a new field with default values\ncreateNewField(name,type){return{name,fieldKey:this.generateFieldKey(name),fieldType:type,required:false,active:true,options:type==='SELECT'?[]:undefined};}}const documentTypeService=new DocumentTypeService();export default documentTypeService;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
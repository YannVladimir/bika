{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\bika\\\\bika\\\\frontend\\\\src\\\\pages\\\\Users\\\\Users.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Card, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Chip, InputAdornment, Pagination, TextField as MuiTextField, styled, TableSortLabel, Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Alert, CircularProgress, Grid, Fab } from \"@mui/material\";\nimport { Edit as EditIcon, Delete as DeleteIcon, Search as SearchIcon, Add as AddIcon, PersonOff as DeactivateIcon, PersonAdd as ActivateIcon } from \"@mui/icons-material\";\nimport { tokens } from \"../../theme/theme\";\nimport { userService, companyService, departmentService, UserRole } from \"../../services/api\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { getRoleDisplayName, hasRole } from \"../../utils/roleUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  borderRadius: 16,\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.05)\"\n}));\n_c = StyledCard;\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = StyledTableCell;\nconst StatusChip = styled(Chip)(({\n  status,\n  theme\n}) => ({\n  backgroundColor: status === \"active\" ? theme.palette.mode === \"light\" ? tokens.secondary.light : tokens.secondary.main : theme.palette.grey[300],\n  color: status === \"active\" ? theme.palette.mode === \"light\" ? tokens.secondary.dark : theme.palette.getContrastText(tokens.secondary.main) : theme.palette.getContrastText(theme.palette.grey[300]),\n  borderRadius: 8,\n  fontWeight: 500\n}));\n_c3 = StatusChip;\nconst RoleChip = styled(Chip)(({\n  theme\n}) => ({\n  borderRadius: 8,\n  fontWeight: 500\n}));\n_c4 = RoleChip;\nconst Users = () => {\n  _s();\n  const {\n    user: currentUser\n  } = useAuth();\n\n  // State\n  const [users, setUsers] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(10);\n  const [sortBy, setSortBy] = useState(\"firstName\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n\n  // Dialog states\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n\n  // Form states\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    companyId: 0,\n    departmentId: 0,\n    role: UserRole.USER\n  });\n\n  // Load initial data\n  useEffect(() => {\n    loadData();\n  }, [currentUser]);\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('Loading users data...', {\n        currentUser\n      });\n      if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN')) {\n        console.log('Loading data for SUPER_ADMIN');\n        // Super admin can see all users and companies\n        const [usersData, companiesData] = await Promise.all([userService.getUsers(), companyService.getCompanies()]);\n        console.log('Loaded users:', usersData);\n        console.log('Loaded companies:', companiesData);\n        setUsers(usersData);\n        setCompanies(companiesData);\n      } else if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN') && currentUser !== null && currentUser !== void 0 && currentUser.companyId) {\n        console.log('Loading data for COMPANY_ADMIN, companyId:', currentUser.companyId);\n        // Company admin can see users from their company\n        const [usersData, companiesData, departmentsData] = await Promise.all([userService.getUsersByCompany(currentUser.companyId), companyService.getCompanies(), departmentService.getDepartmentsByCompany(currentUser.companyId)]);\n        console.log('Loaded users for company:', usersData);\n        console.log('Loaded departments:', departmentsData);\n        setUsers(usersData);\n        setCompanies(companiesData);\n        setDepartments(departmentsData);\n      } else {\n        console.log('User does not have permission to view users');\n        setError(\"You don't have permission to view users\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error loading data:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadDepartmentsByCompany = async companyId => {\n    try {\n      const departmentsData = await departmentService.getDepartmentsByCompany(companyId);\n      setDepartments(departmentsData);\n    } catch (err) {\n      console.error('Error loading departments:', err);\n    }\n  };\n\n  // Filtering and sorting\n  const filteredUsers = users.filter(user => user.firstName.toLowerCase().includes(searchTerm.toLowerCase()) || user.lastName.toLowerCase().includes(searchTerm.toLowerCase()) || user.email.toLowerCase().includes(searchTerm.toLowerCase()) || user.username.toLowerCase().includes(searchTerm.toLowerCase()));\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\n    const aValue = a[sortBy];\n    const bValue = b[sortBy];\n\n    // Handle undefined values\n    if (aValue === undefined && bValue === undefined) return 0;\n    if (aValue === undefined) return sortOrder === \"asc\" ? 1 : -1;\n    if (bValue === undefined) return sortOrder === \"asc\" ? -1 : 1;\n    if (aValue < bValue) return sortOrder === \"asc\" ? -1 : 1;\n    if (aValue > bValue) return sortOrder === \"asc\" ? 1 : -1;\n    return 0;\n  });\n\n  // Pagination\n  const totalPages = Math.ceil(sortedUsers.length / usersPerPage);\n  const paginatedUsers = sortedUsers.slice((currentPage - 1) * usersPerPage, currentPage * usersPerPage);\n\n  // Event handlers\n  const handleSort = column => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortBy(column);\n      setSortOrder(\"asc\");\n    }\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1);\n  };\n  const handlePageChange = (_, value) => {\n    setCurrentPage(value);\n  };\n\n  // CRUD operations\n  const handleAddUser = () => {\n    setFormData({\n      username: '',\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      companyId: hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') ? 0 : (currentUser === null || currentUser === void 0 ? void 0 : currentUser.companyId) || 0,\n      departmentId: 0,\n      role: UserRole.USER\n    });\n    if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN') && currentUser !== null && currentUser !== void 0 && currentUser.companyId) {\n      loadDepartmentsByCompany(currentUser.companyId);\n    }\n    setAddDialogOpen(true);\n  };\n  const handleEditUser = user => {\n    setEditingUser(user);\n    setFormData({\n      username: user.username,\n      email: user.email,\n      password: '',\n      // Don't pre-fill password\n      firstName: user.firstName,\n      lastName: user.lastName,\n      companyId: user.companyId,\n      departmentId: user.departmentId || 0,\n      role: user.role\n    });\n    if (user.companyId) {\n      loadDepartmentsByCompany(user.companyId);\n    }\n    setEditDialogOpen(true);\n  };\n  const handleDeleteUser = user => {\n    setUserToDelete(user);\n    setDeleteDialogOpen(true);\n  };\n  const handleToggleUserStatus = async user => {\n    try {\n      if (user.active) {\n        await userService.deactivateUser(user.id);\n      } else {\n        await userService.activateUser(user.id);\n      }\n      await loadData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to update user status');\n    }\n  };\n\n  // Form handlers\n  const handleFormChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Load departments when company changes\n    if (field === 'companyId' && value) {\n      loadDepartmentsByCompany(value);\n    }\n  };\n  const handleSaveUser = async () => {\n    try {\n      if (editingUser) {\n        // Update existing user\n        await userService.updateUser(editingUser.id, {\n          firstName: formData.firstName,\n          lastName: formData.lastName,\n          role: formData.role,\n          companyId: formData.companyId,\n          departmentId: formData.departmentId || undefined\n        });\n      } else {\n        // Create new user\n        await userService.createUser(formData);\n      }\n      setEditDialogOpen(false);\n      setAddDialogOpen(false);\n      setEditingUser(null);\n      await loadData();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to save user');\n    }\n  };\n  const handleConfirmDelete = async () => {\n    if (!userToDelete) return;\n    try {\n      await userService.deleteUser(userToDelete.id);\n      setDeleteDialogOpen(false);\n      setUserToDelete(null);\n      await loadData();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to delete user');\n    }\n  };\n  const handleCloseDialogs = () => {\n    setEditDialogOpen(false);\n    setAddDialogOpen(false);\n    setDeleteDialogOpen(false);\n    setEditingUser(null);\n    setUserToDelete(null);\n    setError(null);\n  };\n\n  // Get available roles based on current user\n  const getAvailableRoles = () => {\n    if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN')) {\n      return [UserRole.SUPER_ADMIN, UserRole.COMPANY_ADMIN, UserRole.MANAGER, UserRole.USER];\n    } else if (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN')) {\n      return [UserRole.MANAGER, UserRole.USER];\n    }\n    return [UserRole.USER];\n  };\n\n  // Get company name\n  const getCompanyName = companyId => {\n    const company = companies.find(c => c.id === companyId);\n    return company ? company.name : 'Unknown';\n  };\n\n  // Get department name\n  const getDepartmentName = departmentId => {\n    if (!departmentId) return 'No Department';\n    const department = departments.find(d => d.id === departmentId);\n    return department ? department.name : 'Unknown';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          ml: 2\n        },\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !users.length) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: loadData,\n        variant: \"contained\",\n        sx: {\n          mt: 2\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        children: \"Users & Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') || hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN')) && /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add user\",\n        onClick: handleAddUser,\n        sx: {\n          position: \"fixed\",\n          bottom: 24,\n          right: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      onClose: () => setError(null),\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledCard, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(MuiTextField, {\n          placeholder: \"Search users...\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 13\n            }, this)\n          },\n          sx: {\n            mb: 2,\n            width: \"100%\",\n            maxWidth: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"firstName\",\n                    direction: sortBy === \"firstName\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"firstName\"),\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"email\",\n                    direction: sortBy === \"email\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"email\"),\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"role\",\n                    direction: sortBy === \"role\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"role\"),\n                    children: \"Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: sortBy === \"active\",\n                    direction: sortBy === \"active\" ? sortOrder : \"asc\",\n                    onClick: () => handleSort(\"active\"),\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: paginatedUsers.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  colSpan: 7,\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    color: \"text.secondary\",\n                    sx: {\n                      py: 4\n                    },\n                    children: searchTerm ? 'No users found matching your search.' : 'No users found.'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this) : paginatedUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    fontWeight: \"medium\",\n                    children: [user.firstName, \" \", user.lastName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"@\", user.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(RoleChip, {\n                    label: getRoleDisplayName(user.role),\n                    color: user.role === UserRole.SUPER_ADMIN ? \"error\" : user.role === UserRole.COMPANY_ADMIN ? \"warning\" : user.role === UserRole.MANAGER ? \"info\" : \"default\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: getCompanyName(user.companyId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: getDepartmentName(user.departmentId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(StatusChip, {\n                    label: user.active ? \"Active\" : \"Inactive\",\n                    status: user.active ? \"active\" : \"inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      gap: 1\n                    },\n                    children: (hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') || hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'COMPANY_ADMIN') && user.companyId === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.companyId)) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => handleEditUser(user),\n                        size: \"small\",\n                        color: \"primary\",\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 514,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 509,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => handleToggleUserStatus(user),\n                        size: \"small\",\n                        color: user.active ? \"warning\" : \"success\",\n                        children: user.active ? /*#__PURE__*/_jsxDEV(DeactivateIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 521,\n                          columnNumber: 48\n                        }, this) : /*#__PURE__*/_jsxDEV(ActivateIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 521,\n                          columnNumber: 86\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 31\n                      }, this), hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') && /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => handleDeleteUser(user),\n                        size: \"small\",\n                        color: \"error\",\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 529,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 9\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            count: totalPages,\n            page: currentPage,\n            onChange: handlePageChange,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: addDialogOpen,\n      onClose: handleCloseDialogs,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Username\",\n              value: formData.username,\n              onChange: e => handleFormChange('username', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Email\",\n              type: \"email\",\n              value: formData.email,\n              onChange: e => handleFormChange('email', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"First Name\",\n              value: formData.firstName,\n              onChange: e => handleFormChange('firstName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Last Name\",\n              value: formData.lastName,\n              onChange: e => handleFormChange('lastName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Password\",\n              type: \"password\",\n              value: formData.password,\n              onChange: e => handleFormChange('password', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), hasRole(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role, 'SUPER_ADMIN') && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.companyId,\n                onChange: e => handleFormChange('companyId', e.target.value),\n                label: \"Company\",\n                children: companies.map(company => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: company.id,\n                  children: company.name\n                }, company.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.departmentId,\n                onChange: e => handleFormChange('departmentId', e.target.value),\n                label: \"Department\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"No Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 19\n                }, this), departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: department.id,\n                  children: department.name\n                }, department.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.role,\n                onChange: e => handleFormChange('role', e.target.value),\n                label: \"Role\",\n                children: getAvailableRoles().map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: role,\n                  children: getRoleDisplayName(role)\n                }, role, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveUser,\n          variant: \"contained\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleCloseDialogs,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"First Name\",\n              value: formData.firstName,\n              onChange: e => handleFormChange('firstName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(MuiTextField, {\n              label: \"Last Name\",\n              value: formData.lastName,\n              onChange: e => handleFormChange('lastName', e.target.value),\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.role,\n                onChange: e => handleFormChange('role', e.target.value),\n                label: \"Role\",\n                children: getAvailableRoles().map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: role,\n                  children: getRoleDisplayName(role)\n                }, role, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.departmentId,\n                onChange: e => handleFormChange('departmentId', e.target.value),\n                label: \"Department\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"No Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 19\n                }, this), departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: department.id,\n                  children: department.name\n                }, department.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveUser,\n          variant: \"contained\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleCloseDialogs,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete user \\\"\", userToDelete === null || userToDelete === void 0 ? void 0 : userToDelete.firstName, \" \", userToDelete === null || userToDelete === void 0 ? void 0 : userToDelete.lastName, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialogs,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"hJJPoK67BaLyfGze23TTTMkq89A=\", false, function () {\n  return [useAuth];\n});\n_c5 = Users;\nexport default Users;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"StyledTableCell\");\n$RefreshReg$(_c3, \"StatusChip\");\n$RefreshReg$(_c4, \"RoleChip\");\n$RefreshReg$(_c5, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Chip","InputAdornment","Pagination","TextField","MuiTextField","styled","TableSortLabel","Dialog","DialogTitle","DialogContent","DialogActions","Button","FormControl","InputLabel","Select","MenuItem","Alert","CircularProgress","Grid","Fab","Edit","EditIcon","Delete","DeleteIcon","Search","SearchIcon","Add","AddIcon","PersonOff","DeactivateIcon","PersonAdd","ActivateIcon","tokens","userService","companyService","departmentService","UserRole","useAuth","getRoleDisplayName","hasRole","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledCard","theme","borderRadius","boxShadow","_c","StyledTableCell","borderBottom","palette","divider","_c2","StatusChip","status","backgroundColor","mode","secondary","light","main","grey","color","dark","getContrastText","fontWeight","_c3","RoleChip","_c4","Users","_s","user","currentUser","users","setUsers","companies","setCompanies","departments","setDepartments","loading","setLoading","error","setError","searchTerm","setSearchTerm","currentPage","setCurrentPage","usersPerPage","sortBy","setSortBy","sortOrder","setSortOrder","editDialogOpen","setEditDialogOpen","addDialogOpen","setAddDialogOpen","editingUser","setEditingUser","deleteDialogOpen","setDeleteDialogOpen","userToDelete","setUserToDelete","formData","setFormData","username","email","password","firstName","lastName","companyId","departmentId","role","USER","loadData","console","log","usersData","companiesData","Promise","all","getUsers","getCompanies","departmentsData","getUsersByCompany","getDepartmentsByCompany","err","_err$response","_err$response$data","response","data","message","loadDepartmentsByCompany","filteredUsers","filter","toLowerCase","includes","sortedUsers","sort","a","b","aValue","bValue","undefined","totalPages","Math","ceil","length","paginatedUsers","slice","handleSort","column","handleSearchChange","e","target","value","handlePageChange","_","handleAddUser","handleEditUser","handleDeleteUser","handleToggleUserStatus","active","deactivateUser","id","activateUser","_err$response2","_err$response2$data","handleFormChange","field","prev","handleSaveUser","updateUser","createUser","_err$response3","_err$response3$data","handleConfirmDelete","deleteUser","_err$response4","_err$response4$data","handleCloseDialogs","getAvailableRoles","SUPER_ADMIN","COMPANY_ADMIN","MANAGER","getCompanyName","company","find","c","name","getDepartmentName","department","d","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","ml","p","severity","onClick","mt","mb","position","bottom","right","onClose","placeholder","onChange","InputProps","startAdornment","width","maxWidth","direction","colSpan","align","py","map","hover","label","gap","size","fontSize","count","page","open","fullWidth","container","spacing","item","xs","sm","required","type","_c5","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/bika/bika/frontend/src/pages/Users/Users.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Chip,\n  InputAdornment,\n  Pagination,\n  TextField as MuiTextField,\n  styled,\n  TableSortLabel,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Alert,\n  CircularProgress,\n  Grid,\n  Fab,\n} from \"@mui/material\";\nimport {\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Search as SearchIcon,\n  Add as AddIcon,\n  PersonOff as DeactivateIcon,\n  PersonAdd as ActivateIcon,\n} from \"@mui/icons-material\";\nimport { tokens } from \"../../theme/theme\";\nimport { InputChangeEvent, SelectChangeEvent } from \"../../types/events\";\nimport { userService, companyService, departmentService, User, UserRole, Company, Department, CreateUserRequest } from \"../../services/api\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { getRoleDisplayName, hasRole, hasMinimumRole } from \"../../utils/roleUtils\";\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  borderRadius: 16,\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.05)\",\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  borderBottom: `1px solid ${theme.palette.divider}`,\n}));\n\nconst StatusChip = styled(Chip)<{ status: \"active\" | \"inactive\" }>(\n  ({ status, theme }) => ({\n    backgroundColor:\n      status === \"active\"\n        ? theme.palette.mode === \"light\"\n          ? tokens.secondary.light\n          : tokens.secondary.main\n        : theme.palette.grey[300],\n    color:\n      status === \"active\"\n        ? theme.palette.mode === \"light\"\n          ? tokens.secondary.dark\n          : theme.palette.getContrastText(tokens.secondary.main)\n        : theme.palette.getContrastText(theme.palette.grey[300]),\n    borderRadius: 8,\n    fontWeight: 500,\n  })\n);\n\nconst RoleChip = styled(Chip)(({ theme }) => ({\n  borderRadius: 8,\n  fontWeight: 500,\n}));\n\ninterface UsersProps {}\n\nconst Users: React.FC<UsersProps> = () => {\n  const { user: currentUser } = useAuth();\n  \n  // State\n  const [users, setUsers] = useState<User[]>([]);\n  const [companies, setCompanies] = useState<Company[]>([]);\n  const [departments, setDepartments] = useState<Department[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(10);\n  const [sortBy, setSortBy] = useState<keyof User>(\"firstName\");\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"asc\");\n\n  // Dialog states\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState<User | null>(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [userToDelete, setUserToDelete] = useState<User | null>(null);\n\n  // Form states\n  const [formData, setFormData] = useState<CreateUserRequest>({\n    username: '',\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    companyId: 0,\n    departmentId: 0,\n    role: UserRole.USER\n  });\n\n  // Load initial data\n  useEffect(() => {\n    loadData();\n  }, [currentUser]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('Loading users data...', { currentUser });\n\n      if (hasRole(currentUser?.role, 'SUPER_ADMIN')) {\n        console.log('Loading data for SUPER_ADMIN');\n        // Super admin can see all users and companies\n        const [usersData, companiesData] = await Promise.all([\n          userService.getUsers(),\n          companyService.getCompanies()\n        ]);\n        console.log('Loaded users:', usersData);\n        console.log('Loaded companies:', companiesData);\n        setUsers(usersData);\n        setCompanies(companiesData);\n      } else if (hasRole(currentUser?.role, 'COMPANY_ADMIN') && currentUser?.companyId) {\n        console.log('Loading data for COMPANY_ADMIN, companyId:', currentUser.companyId);\n        // Company admin can see users from their company\n        const [usersData, companiesData, departmentsData] = await Promise.all([\n          userService.getUsersByCompany(currentUser.companyId),\n          companyService.getCompanies(),\n          departmentService.getDepartmentsByCompany(currentUser.companyId)\n        ]);\n        console.log('Loaded users for company:', usersData);\n        console.log('Loaded departments:', departmentsData);\n        setUsers(usersData);\n        setCompanies(companiesData);\n        setDepartments(departmentsData);\n      } else {\n        console.log('User does not have permission to view users');\n        setError(\"You don't have permission to view users\");\n      }\n    } catch (err: any) {\n      console.error('Error loading data:', err);\n      setError(err.response?.data?.message || err.message || 'Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadDepartmentsByCompany = async (companyId: number) => {\n    try {\n      const departmentsData = await departmentService.getDepartmentsByCompany(companyId);\n      setDepartments(departmentsData);\n    } catch (err: any) {\n      console.error('Error loading departments:', err);\n    }\n  };\n\n  // Filtering and sorting\n  const filteredUsers = users.filter(user =>\n    user.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.username.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\n    const aValue = a[sortBy];\n    const bValue = b[sortBy];\n    \n    // Handle undefined values\n    if (aValue === undefined && bValue === undefined) return 0;\n    if (aValue === undefined) return sortOrder === \"asc\" ? 1 : -1;\n    if (bValue === undefined) return sortOrder === \"asc\" ? -1 : 1;\n    \n    if (aValue < bValue) return sortOrder === \"asc\" ? -1 : 1;\n    if (aValue > bValue) return sortOrder === \"asc\" ? 1 : -1;\n    return 0;\n  });\n\n  // Pagination\n  const totalPages = Math.ceil(sortedUsers.length / usersPerPage);\n  const paginatedUsers = sortedUsers.slice(\n    (currentPage - 1) * usersPerPage,\n    currentPage * usersPerPage\n  );\n\n  // Event handlers\n  const handleSort = (column: keyof User) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortBy(column);\n      setSortOrder(\"asc\");\n    }\n  };\n\n  const handleSearchChange = (e: InputChangeEvent) => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (_: unknown, value: number) => {\n    setCurrentPage(value);\n  };\n\n  // CRUD operations\n  const handleAddUser = () => {\n    setFormData({\n      username: '',\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      companyId: hasRole(currentUser?.role, 'SUPER_ADMIN') ? 0 : currentUser?.companyId || 0,\n      departmentId: 0,\n      role: UserRole.USER\n    });\n    \n    if (hasRole(currentUser?.role, 'COMPANY_ADMIN') && currentUser?.companyId) {\n      loadDepartmentsByCompany(currentUser.companyId);\n    }\n    \n    setAddDialogOpen(true);\n  };\n\n  const handleEditUser = (user: User) => {\n    setEditingUser(user);\n    setFormData({\n      username: user.username,\n      email: user.email,\n      password: '', // Don't pre-fill password\n      firstName: user.firstName,\n      lastName: user.lastName,\n      companyId: user.companyId,\n      departmentId: user.departmentId || 0,\n      role: user.role\n    });\n    \n    if (user.companyId) {\n      loadDepartmentsByCompany(user.companyId);\n    }\n    \n    setEditDialogOpen(true);\n  };\n\n  const handleDeleteUser = (user: User) => {\n    setUserToDelete(user);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleToggleUserStatus = async (user: User) => {\n    try {\n      if (user.active) {\n        await userService.deactivateUser(user.id);\n      } else {\n        await userService.activateUser(user.id);\n      }\n      await loadData();\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to update user status');\n    }\n  };\n\n  // Form handlers\n  const handleFormChange = (field: keyof CreateUserRequest, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Load departments when company changes\n    if (field === 'companyId' && value) {\n      loadDepartmentsByCompany(value);\n    }\n  };\n\n  const handleSaveUser = async () => {\n    try {\n      if (editingUser) {\n        // Update existing user\n        await userService.updateUser(editingUser.id, {\n          firstName: formData.firstName,\n          lastName: formData.lastName,\n          role: formData.role,\n          companyId: formData.companyId,\n          departmentId: formData.departmentId || undefined\n        });\n      } else {\n        // Create new user\n        await userService.createUser(formData);\n      }\n      \n      setEditDialogOpen(false);\n      setAddDialogOpen(false);\n      setEditingUser(null);\n      await loadData();\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to save user');\n    }\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!userToDelete) return;\n    \n    try {\n      await userService.deleteUser(userToDelete.id);\n      setDeleteDialogOpen(false);\n      setUserToDelete(null);\n      await loadData();\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to delete user');\n    }\n  };\n\n  const handleCloseDialogs = () => {\n    setEditDialogOpen(false);\n    setAddDialogOpen(false);\n    setDeleteDialogOpen(false);\n    setEditingUser(null);\n    setUserToDelete(null);\n    setError(null);\n  };\n\n  // Get available roles based on current user\n  const getAvailableRoles = (): UserRole[] => {\n    if (hasRole(currentUser?.role, 'SUPER_ADMIN')) {\n      return [UserRole.SUPER_ADMIN, UserRole.COMPANY_ADMIN, UserRole.MANAGER, UserRole.USER];\n    } else if (hasRole(currentUser?.role, 'COMPANY_ADMIN')) {\n      return [UserRole.MANAGER, UserRole.USER];\n    }\n    return [UserRole.USER];\n  };\n\n  // Get company name\n  const getCompanyName = (companyId: number): string => {\n    const company = companies.find(c => c.id === companyId);\n    return company ? company.name : 'Unknown';\n  };\n\n  // Get department name\n  const getDepartmentName = (departmentId: number | undefined): string => {\n    if (!departmentId) return 'No Department';\n    const department = departments.find(d => d.id === departmentId);\n    return department ? department.name : 'Unknown';\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n        <Typography variant=\"h6\" sx={{ ml: 2 }}>Loading users...</Typography>\n      </Box>\n    );\n  }\n\n  if (error && !users.length) {\n    return (\n      <Box p={3}>\n        <Alert severity=\"error\">{error}</Alert>\n        <Button onClick={loadData} variant=\"contained\" sx={{ mt: 2 }}>\n          Retry\n        </Button>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", mb: 3 }}>\n        <Typography variant=\"h4\" fontWeight=\"bold\">\n        Users & Roles\n      </Typography>\n        {(hasRole(currentUser?.role, 'SUPER_ADMIN') || hasRole(currentUser?.role, 'COMPANY_ADMIN')) && (\n          <Fab\n            color=\"primary\"\n            aria-label=\"add user\"\n            onClick={handleAddUser}\n            sx={{ position: \"fixed\", bottom: 24, right: 24 }}\n          >\n            <AddIcon />\n          </Fab>\n        )}\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" onClose={() => setError(null)} sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <StyledCard>\n        <Box sx={{ p: 2 }}>\n      <MuiTextField\n        placeholder=\"Search users...\"\n            value={searchTerm}\n        onChange={handleSearchChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n            sx={{ mb: 2, width: \"100%\", maxWidth: 400 }}\n      />\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>\n                  <TableSortLabel\n                      active={sortBy === \"firstName\"}\n                      direction={sortBy === \"firstName\" ? sortOrder : \"asc\"}\n                      onClick={() => handleSort(\"firstName\")}\n                  >\n                    Name\n                  </TableSortLabel>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <TableSortLabel\n                      active={sortBy === \"email\"}\n                      direction={sortBy === \"email\" ? sortOrder : \"asc\"}\n                      onClick={() => handleSort(\"email\")}\n                  >\n                    Email\n                  </TableSortLabel>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <TableSortLabel\n                      active={sortBy === \"role\"}\n                      direction={sortBy === \"role\" ? sortOrder : \"asc\"}\n                      onClick={() => handleSort(\"role\")}\n                  >\n                    Role\n                  </TableSortLabel>\n                </StyledTableCell>\n                  <StyledTableCell>Company</StyledTableCell>\n                  <StyledTableCell>Department</StyledTableCell>\n                <StyledTableCell>\n                  <TableSortLabel\n                      active={sortBy === \"active\"}\n                      direction={sortBy === \"active\" ? sortOrder : \"asc\"}\n                      onClick={() => handleSort(\"active\")}\n                  >\n                    Status\n                  </TableSortLabel>\n                </StyledTableCell>\n                  <StyledTableCell>Actions</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n                {paginatedUsers.length === 0 ? (\n                  <TableRow>\n                    <StyledTableCell colSpan={7} align=\"center\">\n                      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ py: 4 }}>\n                        {searchTerm ? 'No users found matching your search.' : 'No users found.'}\n                      </Typography>\n                    </StyledTableCell>\n                  </TableRow>\n                ) : (\n                  paginatedUsers.map((user) => (\n                    <TableRow key={user.id} hover>\n                      <StyledTableCell>\n                        <Typography fontWeight=\"medium\">\n                          {user.firstName} {user.lastName}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          @{user.username}\n                        </Typography>\n                      </StyledTableCell>\n                  <StyledTableCell>{user.email}</StyledTableCell>\n                      <StyledTableCell>\n                        <RoleChip\n                          label={getRoleDisplayName(user.role)}\n                          color={user.role === UserRole.SUPER_ADMIN ? \"error\" : \n                                 user.role === UserRole.COMPANY_ADMIN ? \"warning\" :\n                                 user.role === UserRole.MANAGER ? \"info\" : \"default\"}\n                          variant=\"outlined\"\n                        />\n                      </StyledTableCell>\n                      <StyledTableCell>{getCompanyName(user.companyId)}</StyledTableCell>\n                      <StyledTableCell>{getDepartmentName(user.departmentId)}</StyledTableCell>\n                  <StyledTableCell>\n                    <StatusChip\n                          label={user.active ? \"Active\" : \"Inactive\"}\n                          status={user.active ? \"active\" : \"inactive\"}\n                    />\n                  </StyledTableCell>\n                      <StyledTableCell>\n                        <Box sx={{ display: \"flex\", gap: 1 }}>\n                          {(hasRole(currentUser?.role, 'SUPER_ADMIN') || \n                            (hasRole(currentUser?.role, 'COMPANY_ADMIN') && user.companyId === currentUser?.companyId)) && (\n                            <>\n                    <IconButton\n                                onClick={() => handleEditUser(user)}\n                      size=\"small\"\n                                color=\"primary\"\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                              <IconButton\n                                onClick={() => handleToggleUserStatus(user)}\n                                size=\"small\"\n                                color={user.active ? \"warning\" : \"success\"}\n                              >\n                                {user.active ? <DeactivateIcon fontSize=\"small\" /> : <ActivateIcon fontSize=\"small\" />}\n                              </IconButton>\n                              {hasRole(currentUser?.role, 'SUPER_ADMIN') && (\n                                <IconButton\n                                  onClick={() => handleDeleteUser(user)}\n                                  size=\"small\"\n                                  color=\"error\"\n                                >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                              )}\n                            </>\n                          )}\n                        </Box>\n                  </StyledTableCell>\n                </TableRow>\n                  ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n          {totalPages > 1 && (\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\n          <Pagination\n                count={totalPages}\n                page={currentPage}\n            onChange={handlePageChange}\n            color=\"primary\"\n          />\n            </Box>\n          )}\n        </Box>\n      </StyledCard>\n\n      {/* Add User Dialog */}\n      <Dialog open={addDialogOpen} onClose={handleCloseDialogs} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Add New User</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <MuiTextField\n                label=\"Username\"\n                value={formData.username}\n                onChange={(e) => handleFormChange('username', e.target.value)}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <MuiTextField\n                label=\"Email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => handleFormChange('email', e.target.value)}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <MuiTextField\n                label=\"First Name\"\n                value={formData.firstName}\n                onChange={(e) => handleFormChange('firstName', e.target.value)}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <MuiTextField\n                label=\"Last Name\"\n                value={formData.lastName}\n                onChange={(e) => handleFormChange('lastName', e.target.value)}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <MuiTextField\n                label=\"Password\"\n                type=\"password\"\n                value={formData.password}\n                onChange={(e) => handleFormChange('password', e.target.value)}\n        fullWidth\n                required\n              />\n            </Grid>\n            {hasRole(currentUser?.role, 'SUPER_ADMIN') && (\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth required>\n                  <InputLabel>Company</InputLabel>\n                  <Select\n                    value={formData.companyId}\n                    onChange={(e) => handleFormChange('companyId', e.target.value)}\n                    label=\"Company\"\n                  >\n                    {companies.map(company => (\n                      <MenuItem key={company.id} value={company.id}>\n                        {company.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Department</InputLabel>\n                <Select\n                  value={formData.departmentId}\n                  onChange={(e) => handleFormChange('departmentId', e.target.value)}\n                  label=\"Department\"\n                >\n                  <MenuItem value={0}>No Department</MenuItem>\n                  {departments.map(department => (\n                    <MenuItem key={department.id} value={department.id}>\n                      {department.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required>\n                <InputLabel>Role</InputLabel>\n                <Select\n                  value={formData.role}\n                  onChange={(e) => handleFormChange('role', e.target.value)}\n                  label=\"Role\"\n                >\n                  {getAvailableRoles().map(role => (\n                    <MenuItem key={role} value={role}>\n                      {getRoleDisplayName(role)}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialogs}>Cancel</Button>\n          <Button onClick={handleSaveUser} variant=\"contained\">\n            Add User\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Edit User Dialog */}\n      <Dialog open={editDialogOpen} onClose={handleCloseDialogs} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Edit User</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n            <MuiTextField\n                label=\"First Name\"\n                value={formData.firstName}\n                onChange={(e) => handleFormChange('firstName', e.target.value)}\n              fullWidth\n                required\n            />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <MuiTextField\n                label=\"Last Name\"\n                value={formData.lastName}\n                onChange={(e) => handleFormChange('lastName', e.target.value)}\n              fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required>\n                <InputLabel>Role</InputLabel>\n                <Select\n                  value={formData.role}\n                  onChange={(e) => handleFormChange('role', e.target.value)}\n              label=\"Role\"\n                >\n                  {getAvailableRoles().map(role => (\n                    <MenuItem key={role} value={role}>\n                      {getRoleDisplayName(role)}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Department</InputLabel>\n                <Select\n                  value={formData.departmentId}\n                  onChange={(e) => handleFormChange('departmentId', e.target.value)}\n                  label=\"Department\"\n                >\n                  <MenuItem value={0}>No Department</MenuItem>\n                  {departments.map(department => (\n                    <MenuItem key={department.id} value={department.id}>\n                      {department.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialogs}>Cancel</Button>\n          <Button onClick={handleSaveUser} variant=\"contained\">\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={deleteDialogOpen} onClose={handleCloseDialogs}>\n        <DialogTitle>Confirm Delete</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete user \"{userToDelete?.firstName} {userToDelete?.lastName}\"?\n            This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialogs}>Cancel</Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default Users;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
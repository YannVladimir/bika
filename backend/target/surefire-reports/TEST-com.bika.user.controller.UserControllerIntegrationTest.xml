<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.bika.user.controller.UserControllerIntegrationTest" time="6.79" tests="21" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Yann\Desktop\biakasystem\backend\target\test-classes;C:\Users\Yann\Desktop\biakasystem\backend\target\classes;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.3\spring-boot-starter-web-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.3\spring-boot-starter-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.3\spring-boot-starter-logging-3.2.3.jar;C:\Users\Yann\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Yann\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Yann\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Yann\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Yann\.m2\repository\org\slf4j\jul-to-slf4j\2.0.12\jul-to-slf4j-2.0.12.jar;C:\Users\Yann\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Yann\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.3\spring-boot-starter-json-3.2.3.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.3\spring-boot-starter-tomcat-3.2.3.jar;C:\Users\Yann\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.19\tomcat-embed-core-10.1.19.jar;C:\Users\Yann\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.19\tomcat-embed-websocket-10.1.19.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-web\6.1.4\spring-web-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-beans\6.1.4\spring-beans-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-webmvc\6.1.4\spring-webmvc-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-context\6.1.4\spring-context-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-expression\6.1.4\spring-expression-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.3\spring-boot-starter-data-jpa-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.3\spring-boot-starter-aop-3.2.3.jar;C:\Users\Yann\.m2\repository\org\aspectj\aspectjweaver\1.9.21\aspectjweaver-1.9.21.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.3\spring-boot-starter-jdbc-3.2.3.jar;C:\Users\Yann\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-jdbc\6.1.4\spring-jdbc-6.1.4.jar;C:\Users\Yann\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Yann\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Yann\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Yann\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Yann\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Yann\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Yann\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Yann\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\Yann\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Yann\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Yann\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Yann\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Yann\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Yann\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Yann\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-jpa\3.2.3\spring-data-jpa-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-commons\3.2.3\spring-data-commons-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-orm\6.1.4\spring-orm-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-tx\6.1.4\spring-tx-6.1.4.jar;C:\Users\Yann\.m2\repository\org\slf4j\slf4j-api\2.0.12\slf4j-api-2.0.12.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-aspects\6.1.4\spring-aspects-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.3\spring-boot-starter-security-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-aop\6.1.4\spring-aop-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-config\6.2.2\spring-security-config-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-web\6.2.2\spring-security-web-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.3\spring-boot-starter-validation-3.2.3.jar;C:\Users\Yann\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.19\tomcat-embed-el-10.1.19.jar;C:\Users\Yann\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Yann\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.2.3\spring-boot-starter-actuator-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.2.3\spring-boot-actuator-autoconfigure-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-actuator\3.2.3\spring-boot-actuator-3.2.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-observation\1.12.3\micrometer-observation-1.12.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-commons\1.12.3\micrometer-commons-1.12.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-jakarta9\1.12.3\micrometer-jakarta9-1.12.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-core\1.12.3\micrometer-core-1.12.3.jar;C:\Users\Yann\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\Yann\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.2.3\spring-boot-starter-data-redis-3.2.3.jar;C:\Users\Yann\.m2\repository\io\lettuce\lettuce-core\6.3.1.RELEASE\lettuce-core-6.3.1.RELEASE.jar;C:\Users\Yann\.m2\repository\io\netty\netty-common\4.1.107.Final\netty-common-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-handler\4.1.107.Final\netty-handler-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-resolver\4.1.107.Final\netty-resolver-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-buffer\4.1.107.Final\netty-buffer-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.107.Final\netty-transport-native-unix-common-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-codec\4.1.107.Final\netty-codec-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-transport\4.1.107.Final\netty-transport-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\projectreactor\reactor-core\3.6.3\reactor-core-3.6.3.jar;C:\Users\Yann\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-redis\3.2.3\spring-data-redis-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-keyvalue\3.2.3\spring-data-keyvalue-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-oxm\6.1.4\spring-oxm-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-context-support\6.1.4\spring-context-support-6.1.4.jar;C:\Users\Yann\.m2\repository\org\postgresql\postgresql\42.6.1\postgresql-42.6.1.jar;C:\Users\Yann\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Yann\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\Yann\.m2\repository\org\flywaydb\flyway-core\9.22.3\flyway-core-9.22.3.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-toml\2.15.4\jackson-dataformat-toml-2.15.4.jar;C:\Users\Yann\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\Yann\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\Yann\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\Yann\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-data-elasticsearch\3.2.3\spring-boot-starter-data-elasticsearch-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-elasticsearch\5.2.3\spring-data-elasticsearch-5.2.3.jar;C:\Users\Yann\.m2\repository\co\elastic\clients\elasticsearch-java\8.10.4\elasticsearch-java-8.10.4.jar;C:\Users\Yann\.m2\repository\jakarta\json\jakarta.json-api\2.1.3\jakarta.json-api-2.1.3.jar;C:\Users\Yann\.m2\repository\org\eclipse\parsson\parsson\1.0.0\parsson-1.0.0.jar;C:\Users\Yann\.m2\repository\io\opentelemetry\opentelemetry-api\1.31.0\opentelemetry-api-1.31.0.jar;C:\Users\Yann\.m2\repository\io\opentelemetry\opentelemetry-context\1.31.0\opentelemetry-context-1.31.0.jar;C:\Users\Yann\.m2\repository\org\elasticsearch\client\elasticsearch-rest-client\8.10.4\elasticsearch-rest-client-8.10.4.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpasyncclient\4.1.5\httpasyncclient-4.1.5.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpcore-nio\4.4.16\httpcore-nio-4.4.16.jar;C:\Users\Yann\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\Yann\.m2\repository\io\minio\minio\8.5.7\minio-8.5.7.jar;C:\Users\Yann\.m2\repository\com\carrotsearch\thirdparty\simple-xml-safe\2.7.1\simple-xml-safe-2.7.1.jar;C:\Users\Yann\.m2\repository\com\google\guava\guava\32.1.3-jre\guava-32.1.3-jre.jar;C:\Users\Yann\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\Yann\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Yann\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Yann\.m2\repository\com\google\errorprone\error_prone_annotations\2.21.1\error_prone_annotations-2.21.1.jar;C:\Users\Yann\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;C:\Users\Yann\.m2\repository\com\squareup\okhttp3\okhttp\4.12.0\okhttp-4.12.0.jar;C:\Users\Yann\.m2\repository\com\squareup\okio\okio\3.6.0\okio-3.6.0.jar;C:\Users\Yann\.m2\repository\com\squareup\okio\okio-jvm\3.6.0\okio-jvm-3.6.0.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.9.22\kotlin-stdlib-common-1.9.22.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.9.22\kotlin-stdlib-jdk8-1.9.22.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.9.22\kotlin-stdlib-1.9.22.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.9.22\kotlin-stdlib-jdk7-1.9.22.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\Yann\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.76\bcprov-jdk18on-1.76.jar;C:\Users\Yann\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\Yann\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\Yann\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.3.0\springdoc-openapi-starter-webmvc-ui-2.3.0.jar;C:\Users\Yann\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.3.0\springdoc-openapi-starter-webmvc-api-2.3.0.jar;C:\Users\Yann\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.3.0\springdoc-openapi-starter-common-2.3.0.jar;C:\Users\Yann\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.19\swagger-core-jakarta-2.2.19.jar;C:\Users\Yann\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Yann\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.19\swagger-annotations-jakarta-2.2.19.jar;C:\Users\Yann\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.19\swagger-models-jakarta-2.2.19.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.4\jackson-dataformat-yaml-2.15.4.jar;C:\Users\Yann\.m2\repository\org\webjars\swagger-ui\5.10.3\swagger-ui-5.10.3.jar;C:\Users\Yann\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Yann\.m2\repository\com\vladmihalcea\hibernate-types-60\2.21.1\hibernate-types-60-2.21.1.jar;C:\Users\Yann\.m2\repository\javax\xml\bind\jaxb-api\2.3.0\jaxb-api-2.3.0.jar;C:\Users\Yann\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Yann\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.3\spring-boot-starter-test-3.2.3.jar;C:\Users\Yann\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Yann\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\Yann\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\Yann\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Yann\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Yann\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\Yann\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Yann\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Yann\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Yann\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Yann\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Yann\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Yann\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\Yann\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Yann\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Yann\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Yann\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-core\6.1.4\spring-core-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-jcl\6.1.4\spring-jcl-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-test\6.1.4\spring-test-6.1.4.jar;C:\Users\Yann\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-test\6.2.2\spring-security-test-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-core\6.2.2\spring-security-core-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-crypto\6.2.2\spring-security-crypto-6.2.2.jar;C:\Users\Yann\.m2\repository\org\testcontainers\postgresql\1.19.3\postgresql-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\jdbc\1.19.3\jdbc-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\database-commons\1.19.3\database-commons-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\elasticsearch\1.19.3\elasticsearch-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\Yann\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Yann\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\Yann\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\Yann\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\Yann\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\Yann\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\Yann\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\Yann\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\Yann\.m2\repository\org\testcontainers\junit-jupiter\1.19.3\junit-jupiter-1.19.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-test\3.2.3\spring-boot-test-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot\3.2.3\spring-boot-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.3\spring-boot-test-autoconfigure-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.3\spring-boot-autoconfigure-3.2.3.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Africa/Johannesburg"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="user.country.format" value="NG"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="GB"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21.0.6\bin"/>
    <property name="sun.java.command" value="C:\Users\Yann\AppData\Local\Temp\surefire5251360406733543481\surefirebooter-20250708200633181_3.jar C:\Users\Yann\AppData\Local\Temp\surefire5251360406733543481 2025-07-08T20-06-32_923-jvmRun1 surefire-20250708200633181_1tmp surefire_0-20250708200633181_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Yann\Desktop\biakasystem\backend\target\test-classes;C:\Users\Yann\Desktop\biakasystem\backend\target\classes;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.3\spring-boot-starter-web-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.3\spring-boot-starter-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.3\spring-boot-starter-logging-3.2.3.jar;C:\Users\Yann\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Yann\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Yann\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Yann\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Yann\.m2\repository\org\slf4j\jul-to-slf4j\2.0.12\jul-to-slf4j-2.0.12.jar;C:\Users\Yann\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Yann\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.3\spring-boot-starter-json-3.2.3.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.3\spring-boot-starter-tomcat-3.2.3.jar;C:\Users\Yann\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.19\tomcat-embed-core-10.1.19.jar;C:\Users\Yann\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.19\tomcat-embed-websocket-10.1.19.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-web\6.1.4\spring-web-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-beans\6.1.4\spring-beans-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-webmvc\6.1.4\spring-webmvc-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-context\6.1.4\spring-context-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-expression\6.1.4\spring-expression-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.3\spring-boot-starter-data-jpa-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.3\spring-boot-starter-aop-3.2.3.jar;C:\Users\Yann\.m2\repository\org\aspectj\aspectjweaver\1.9.21\aspectjweaver-1.9.21.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.3\spring-boot-starter-jdbc-3.2.3.jar;C:\Users\Yann\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-jdbc\6.1.4\spring-jdbc-6.1.4.jar;C:\Users\Yann\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Yann\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Yann\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Yann\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Yann\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Yann\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Yann\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Yann\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\Yann\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Yann\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Yann\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Yann\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Yann\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Yann\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Yann\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-jpa\3.2.3\spring-data-jpa-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-commons\3.2.3\spring-data-commons-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-orm\6.1.4\spring-orm-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-tx\6.1.4\spring-tx-6.1.4.jar;C:\Users\Yann\.m2\repository\org\slf4j\slf4j-api\2.0.12\slf4j-api-2.0.12.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-aspects\6.1.4\spring-aspects-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.3\spring-boot-starter-security-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-aop\6.1.4\spring-aop-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-config\6.2.2\spring-security-config-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-web\6.2.2\spring-security-web-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.3\spring-boot-starter-validation-3.2.3.jar;C:\Users\Yann\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.19\tomcat-embed-el-10.1.19.jar;C:\Users\Yann\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Yann\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.2.3\spring-boot-starter-actuator-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.2.3\spring-boot-actuator-autoconfigure-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-actuator\3.2.3\spring-boot-actuator-3.2.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-observation\1.12.3\micrometer-observation-1.12.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-commons\1.12.3\micrometer-commons-1.12.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-jakarta9\1.12.3\micrometer-jakarta9-1.12.3.jar;C:\Users\Yann\.m2\repository\io\micrometer\micrometer-core\1.12.3\micrometer-core-1.12.3.jar;C:\Users\Yann\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\Yann\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.2.3\spring-boot-starter-data-redis-3.2.3.jar;C:\Users\Yann\.m2\repository\io\lettuce\lettuce-core\6.3.1.RELEASE\lettuce-core-6.3.1.RELEASE.jar;C:\Users\Yann\.m2\repository\io\netty\netty-common\4.1.107.Final\netty-common-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-handler\4.1.107.Final\netty-handler-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-resolver\4.1.107.Final\netty-resolver-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-buffer\4.1.107.Final\netty-buffer-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.107.Final\netty-transport-native-unix-common-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-codec\4.1.107.Final\netty-codec-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\netty\netty-transport\4.1.107.Final\netty-transport-4.1.107.Final.jar;C:\Users\Yann\.m2\repository\io\projectreactor\reactor-core\3.6.3\reactor-core-3.6.3.jar;C:\Users\Yann\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-redis\3.2.3\spring-data-redis-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-keyvalue\3.2.3\spring-data-keyvalue-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-oxm\6.1.4\spring-oxm-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-context-support\6.1.4\spring-context-support-6.1.4.jar;C:\Users\Yann\.m2\repository\org\postgresql\postgresql\42.6.1\postgresql-42.6.1.jar;C:\Users\Yann\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Yann\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\Yann\.m2\repository\org\flywaydb\flyway-core\9.22.3\flyway-core-9.22.3.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-toml\2.15.4\jackson-dataformat-toml-2.15.4.jar;C:\Users\Yann\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\Yann\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\Yann\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\Yann\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-data-elasticsearch\3.2.3\spring-boot-starter-data-elasticsearch-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\data\spring-data-elasticsearch\5.2.3\spring-data-elasticsearch-5.2.3.jar;C:\Users\Yann\.m2\repository\co\elastic\clients\elasticsearch-java\8.10.4\elasticsearch-java-8.10.4.jar;C:\Users\Yann\.m2\repository\jakarta\json\jakarta.json-api\2.1.3\jakarta.json-api-2.1.3.jar;C:\Users\Yann\.m2\repository\org\eclipse\parsson\parsson\1.0.0\parsson-1.0.0.jar;C:\Users\Yann\.m2\repository\io\opentelemetry\opentelemetry-api\1.31.0\opentelemetry-api-1.31.0.jar;C:\Users\Yann\.m2\repository\io\opentelemetry\opentelemetry-context\1.31.0\opentelemetry-context-1.31.0.jar;C:\Users\Yann\.m2\repository\org\elasticsearch\client\elasticsearch-rest-client\8.10.4\elasticsearch-rest-client-8.10.4.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpasyncclient\4.1.5\httpasyncclient-4.1.5.jar;C:\Users\Yann\.m2\repository\org\apache\httpcomponents\httpcore-nio\4.4.16\httpcore-nio-4.4.16.jar;C:\Users\Yann\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\Yann\.m2\repository\io\minio\minio\8.5.7\minio-8.5.7.jar;C:\Users\Yann\.m2\repository\com\carrotsearch\thirdparty\simple-xml-safe\2.7.1\simple-xml-safe-2.7.1.jar;C:\Users\Yann\.m2\repository\com\google\guava\guava\32.1.3-jre\guava-32.1.3-jre.jar;C:\Users\Yann\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\Yann\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Yann\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Yann\.m2\repository\com\google\errorprone\error_prone_annotations\2.21.1\error_prone_annotations-2.21.1.jar;C:\Users\Yann\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;C:\Users\Yann\.m2\repository\com\squareup\okhttp3\okhttp\4.12.0\okhttp-4.12.0.jar;C:\Users\Yann\.m2\repository\com\squareup\okio\okio\3.6.0\okio-3.6.0.jar;C:\Users\Yann\.m2\repository\com\squareup\okio\okio-jvm\3.6.0\okio-jvm-3.6.0.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.9.22\kotlin-stdlib-common-1.9.22.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.9.22\kotlin-stdlib-jdk8-1.9.22.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.9.22\kotlin-stdlib-1.9.22.jar;C:\Users\Yann\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.9.22\kotlin-stdlib-jdk7-1.9.22.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\Yann\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.76\bcprov-jdk18on-1.76.jar;C:\Users\Yann\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\Yann\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\Yann\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.3.0\springdoc-openapi-starter-webmvc-ui-2.3.0.jar;C:\Users\Yann\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.3.0\springdoc-openapi-starter-webmvc-api-2.3.0.jar;C:\Users\Yann\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.3.0\springdoc-openapi-starter-common-2.3.0.jar;C:\Users\Yann\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.19\swagger-core-jakarta-2.2.19.jar;C:\Users\Yann\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Yann\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.19\swagger-annotations-jakarta-2.2.19.jar;C:\Users\Yann\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.19\swagger-models-jakarta-2.2.19.jar;C:\Users\Yann\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.4\jackson-dataformat-yaml-2.15.4.jar;C:\Users\Yann\.m2\repository\org\webjars\swagger-ui\5.10.3\swagger-ui-5.10.3.jar;C:\Users\Yann\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Yann\.m2\repository\com\vladmihalcea\hibernate-types-60\2.21.1\hibernate-types-60-2.21.1.jar;C:\Users\Yann\.m2\repository\javax\xml\bind\jaxb-api\2.3.0\jaxb-api-2.3.0.jar;C:\Users\Yann\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Yann\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.3\spring-boot-starter-test-3.2.3.jar;C:\Users\Yann\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Yann\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\Yann\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\Yann\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Yann\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Yann\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\Yann\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\Yann\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Yann\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\Yann\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\Yann\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\Yann\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\Yann\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Yann\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\Yann\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Yann\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Yann\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Yann\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-core\6.1.4\spring-core-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-jcl\6.1.4\spring-jcl-6.1.4.jar;C:\Users\Yann\.m2\repository\org\springframework\spring-test\6.1.4\spring-test-6.1.4.jar;C:\Users\Yann\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-test\6.2.2\spring-security-test-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-core\6.2.2\spring-security-core-6.2.2.jar;C:\Users\Yann\.m2\repository\org\springframework\security\spring-security-crypto\6.2.2\spring-security-crypto-6.2.2.jar;C:\Users\Yann\.m2\repository\org\testcontainers\postgresql\1.19.3\postgresql-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\jdbc\1.19.3\jdbc-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\database-commons\1.19.3\database-commons-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\elasticsearch\1.19.3\elasticsearch-1.19.3.jar;C:\Users\Yann\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\Yann\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Yann\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\Yann\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\Yann\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\Yann\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\Yann\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\Yann\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\Yann\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\Yann\.m2\repository\org\testcontainers\junit-jupiter\1.19.3\junit-jupiter-1.19.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-test\3.2.3\spring-boot-test-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot\3.2.3\spring-boot-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.3\spring-boot-test-autoconfigure-3.2.3.jar;C:\Users\Yann\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.3\spring-boot-autoconfigure-3.2.3.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Yann"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-21.0.6"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Yann\Desktop\biakasystem\backend"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\Yann\AppData\Local\Temp\surefire5251360406733543481\surefirebooter-20250708200633181_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.6+8-LTS-188"/>
    <property name="user.name" value="Yann"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Yann\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Yann\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="5"/>
    <property name="java.version" value="21.0.6"/>
    <property name="user.dir" value="C:\Users\Yann\Desktop\biakasystem\backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="2708"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-21.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-21.0.6\bin;C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\Microsoft\jdk-11.0.16.101-hotspot\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\BaseX\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\xampp\php;C:\composer;c:\Users\Yann\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\Apache\maven\apache-maven-3.9.9\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\Yann\AppData\Local\Microsoft\WindowsApps;C:\Users\Yann\.dotnet\tools;C:\Users\Yann\AppData\Local\Programs\Microsoft VS Code\bin;C:\MinGW\bin;C:\Program Files\MongoDB\mongosh-2.1.0-win32-x64\bin;C:\Program Files\MongoDB\Server\7.0\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.3\bin;;C:\Users\Yann\AppData\Local\GitHubDesktop\bin;C:\Users\Yann\AppData\Roaming\npm;C:\Users\Yann\AppData\Roaming\Composer\vendor\bin;C:\src\flutter;C:\Users\Yann\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\Yann\AppData\Local\Android\Sdk\platform-tools;C:\Users\Yann\AppData\Local\Android\Sdk\emulator;C:\Users\Yann\AppData\Local\Android\Sdk\tools;C:\Users\Yann\AppData\Local\Android\Sdk\tools\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="21.0.6+8-LTS-188"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[bika] "/>
  </properties>
  <testcase name="getAllUsers_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.285">
    <system-out><![CDATA[2025-07-08T20:07:44.273+02:00  INFO 2708 --- [bika] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.bika.user.controller.UserControllerIntegrationTest]: UserControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-08T20:07:44.302+02:00  INFO 2708 --- [bika] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.bika.BikaApplication for test class com.bika.user.controller.UserControllerIntegrationTest
2025-07-08T20:07:44.312+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:44.313+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:44.314+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-07-08T20:07:44.316+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.318+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.448+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.567+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.571+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:44.580+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:44.581+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:44.583+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:44.583+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:44.584+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:44.585+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:44.587+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:44.588+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:44.589+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUserById_ShouldFail_WhenOtherUser" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.292">
    <system-out><![CDATA[2025-07-08T20:07:44.597+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:44.597+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:44.601+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-07-08T20:07:44.602+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.604+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.760+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.872+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.874+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:44.876+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:44.877+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:44.877+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:44.878+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:44.880+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:44.881+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:44.882+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:44.883+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="updateUser_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.37">
    <system-out><![CDATA[2025-07-08T20:07:44.890+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:44.891+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:44.893+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:44.894+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:44.921+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.073+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.220+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.232+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-08T20:07:45.234+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
2025-07-08T20:07:45.235+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-07-08T20:07:45.238+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    update
        users 
    set
        is_active=?,
        company_id=?,
        department_id=?,
        email=?,
        first_name=?,
        last_login=?,
        last_name=?,
        password=?,
        role=?,
        updated_at=?,
        updated_by=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        is_active=?,
        company_id=?,
        department_id=?,
        email=?,
        first_name=?,
        last_login=?,
        last_name=?,
        password=?,
        role=?,
        updated_at=?,
        updated_by=?,
        username=? 
    where
        id=?
2025-07-08T20:07:45.244+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:45.245+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:45.247+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:45.247+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:45.248+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:45.251+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:45.252+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:45.252+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:45.253+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUserById_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.392">
    <system-out><![CDATA[2025-07-08T20:07:45.261+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:45.261+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:45.264+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-07-08T20:07:45.265+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.305+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.490+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.594+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.600+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-08T20:07:45.614+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:45.616+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:45.633+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:45.634+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:45.636+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:45.640+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:45.642+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:45.643+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:45.645+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="deleteUser_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.321">
    <system-out><![CDATA[2025-07-08T20:07:45.656+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:45.656+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:45.661+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 5 ms
2025-07-08T20:07:45.663+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.676+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.813+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.947+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.955+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-08T20:07:45.956+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-08T20:07:45.961+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:45.964+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:45.965+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:45.966+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:45.968+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:45.968+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:45.970+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:45.970+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:45.971+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUsersByCompany_ShouldSucceed_WhenManager" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.337">
    <system-out><![CDATA[2025-07-08T20:07:45.978+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:45.978+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:45.982+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-07-08T20:07:45.983+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:45.986+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.147+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.281+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.287+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
2025-07-08T20:07:46.292+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.company_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.company_id=?
2025-07-08T20:07:46.296+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:46.300+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:46.302+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:46.303+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:46.304+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:46.305+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:46.306+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:46.307+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:46.308+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="updateUser_ShouldSucceed_WhenOwnProfile" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.285">
    <system-out><![CDATA[2025-07-08T20:07:46.314+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:46.314+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:46.315+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-07-08T20:07:46.316+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.318+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.456+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.571+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.578+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:46.585+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:46.588+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:46.588+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:46.590+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:46.591+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:46.592+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:46.594+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:46.594+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUserById_ShouldFail_WhenUserNotFound" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.33">
    <system-out><![CDATA[2025-07-08T20:07:46.601+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:46.601+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:46.603+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:46.613+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.615+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.776+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.888+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.892+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-08T20:07:46.894+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:46.896+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:46.897+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:46.897+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:46.902+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:46.904+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:46.906+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:46.918+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:46.922+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getAllUsers_ShouldFail_WhenUser" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.332">
    <system-out><![CDATA[2025-07-08T20:07:46.948+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:46.948+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:46.950+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:46.952+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:46.970+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.131+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.244+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.250+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:47.252+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:47.254+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:47.255+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:47.265+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:47.267+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:47.268+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:47.270+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:47.271+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUsersByDepartment_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.33">
    <system-out><![CDATA[2025-07-08T20:07:47.277+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:47.277+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:47.278+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-07-08T20:07:47.281+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.293+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.443+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.558+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.572+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-07-08T20:07:47.575+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.department_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.department_id=?
2025-07-08T20:07:47.580+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:47.581+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:47.582+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:47.583+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:47.584+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:47.586+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:47.590+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:47.596+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:47.598+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUsersByCompany_ShouldFail_WhenCompanyNotFound" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.326">
    <system-out><![CDATA[2025-07-08T20:07:47.610+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:47.610+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:47.611+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-07-08T20:07:47.612+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.616+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.795+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.915+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.918+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
2025-07-08T20:07:47.921+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:47.923+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:47.924+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:47.924+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:47.926+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:47.928+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:47.929+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:47.930+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:47.930+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getCurrentUserProfile_ShouldSucceed" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.284">
    <system-out><![CDATA[2025-07-08T20:07:47.937+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:47.937+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:47.940+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-07-08T20:07:47.941+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:47.943+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.077+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.203+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.205+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:48.210+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:48.211+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:48.212+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:48.213+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:48.214+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:48.215+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:48.216+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:48.217+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getAllUsers_ShouldFail_WhenManager" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.316">
    <system-out><![CDATA[2025-07-08T20:07:48.224+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:48.224+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:48.227+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-07-08T20:07:48.228+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.253+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.387+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.522+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.526+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:48.527+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:48.528+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:48.528+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:48.531+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:48.532+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:48.533+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:48.535+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:48.535+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="deactivateUser_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.295">
    <system-out><![CDATA[2025-07-08T20:07:48.543+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:48.543+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:48.545+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:48.546+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.548+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.698+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.811+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.814+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-08T20:07:48.816+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    update
        users 
    set
        is_active=?,
        company_id=?,
        department_id=?,
        email=?,
        first_name=?,
        last_login=?,
        last_name=?,
        password=?,
        role=?,
        updated_at=?,
        updated_by=?,
        username=? 
    where
        id=?
Hibernate: 
    update
        users 
    set
        is_active=?,
        company_id=?,
        department_id=?,
        email=?,
        first_name=?,
        last_login=?,
        last_name=?,
        password=?,
        role=?,
        updated_at=?,
        updated_by=?,
        username=? 
    where
        id=?
2025-07-08T20:07:48.820+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:48.822+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:48.823+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:48.824+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:48.825+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:48.827+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:48.828+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:48.828+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:48.830+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUsersByDepartment_ShouldFail_WhenDepartmentNotFound" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.304">
    <system-out><![CDATA[2025-07-08T20:07:48.837+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:48.837+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:48.841+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-07-08T20:07:48.843+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.845+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:48.978+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.100+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.106+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-07-08T20:07:49.110+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:49.112+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:49.113+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:49.114+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:49.116+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:49.118+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:49.120+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:49.122+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:49.123+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="updateCurrentUserProfile_ShouldSucceed" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.358">
    <system-out><![CDATA[2025-07-08T20:07:49.143+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:49.144+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:49.146+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:49.153+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.166+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.331+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.468+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.471+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:49.473+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:49.474+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:49.474+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:49.475+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:49.476+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:49.480+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:49.482+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:49.486+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="activateUser_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.363">
    <system-out><![CDATA[2025-07-08T20:07:49.518+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:49.518+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:49.550+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-07-08T20:07:49.551+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.555+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.696+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.816+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.828+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-07-08T20:07:49.838+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:49.841+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:49.847+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:49.848+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:49.853+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:49.856+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:49.860+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:49.861+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:49.863+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUsersByCompany_ShouldSucceed_WhenAdmin" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.295">
    <system-out><![CDATA[2025-07-08T20:07:49.870+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:49.870+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:49.872+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:49.874+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:49.876+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.015+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.128+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.131+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0 
    where
        c1_0.id=?
2025-07-08T20:07:50.136+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.company_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.company_id=?
2025-07-08T20:07:50.149+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:50.151+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:50.152+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:50.152+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:50.155+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:50.156+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:50.158+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:50.160+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:50.160+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="deactivateUser_ShouldFail_WhenManager" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.277">
    <system-out><![CDATA[2025-07-08T20:07:50.165+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:50.165+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:50.166+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-07-08T20:07:50.168+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.169+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.300+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.424+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.430+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:50.431+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:50.432+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:50.433+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:50.434+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:50.435+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:50.436+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:50.436+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:50.437+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="deleteUser_ShouldFail_WhenManager" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.305">
    <system-out><![CDATA[2025-07-08T20:07:50.444+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:50.444+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:50.446+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:50.447+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.451+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.596+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.727+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.732+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:50.733+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:50.734+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:50.735+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:50.736+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:50.737+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:50.738+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:50.742+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:50.743+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="getUserById_ShouldSucceed_WhenOwnProfile" classname="com.bika.user.controller.UserControllerIntegrationTest" time="0.309">
    <system-out><![CDATA[2025-07-08T20:07:50.753+02:00  INFO 2708 --- [bika] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-08T20:07:50.753+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-08T20:07:50.756+02:00  INFO 2708 --- [bika] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-08T20:07:50.757+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        companies
        (is_active, address, code, created_at, created_by, description, email, name, phone, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.771+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        departments
        (is_active, code, company_id, created_at, created_by, name, parent_id, updated_at, updated_by, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:50.916+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:51.042+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        users
        (is_active, company_id, created_at, created_by, department_id, email, first_name, last_login, last_name, password, role, updated_at, updated_by, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-08T20:07:51.045+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
Hibernate: 
    select
        t1_0.id,
        t1_0.assigned_to,
        t1_0.company_id,
        t1_0.completed_date,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.creator_id,
        t1_0.department_id,
        t1_0.description,
        t1_0.due_date,
        t1_0.is_active,
        t1_0.priority,
        t1_0.project_id,
        t1_0.start_date,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tasks t1_0
2025-07-08T20:07:51.046+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.is_active,
        u1_0.company_id,
        u1_0.created_at,
        u1_0.created_by,
        u1_0.department_id,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        u1_0.updated_by,
        u1_0.username 
    from
        users u1_0
2025-07-08T20:07:51.050+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:51.051+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-07-08T20:07:51.052+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
Hibernate: 
    select
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.company_id,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0
2025-07-08T20:07:51.054+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        departments 
    where
        id=?
Hibernate: 
    delete 
    from
        departments 
    where
        id=?
2025-07-08T20:07:51.055+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.is_active,
        c1_0.address,
        c1_0.code,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.description,
        c1_0.email,
        c1_0.name,
        c1_0.phone,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        companies c1_0
2025-07-08T20:07:51.056+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
Hibernate: 
    select
        d1_0.company_id,
        d1_0.id,
        d1_0.is_active,
        d1_0.code,
        d1_0.created_at,
        d1_0.created_by,
        d1_0.name,
        d1_0.parent_id,
        d1_0.updated_at,
        d1_0.updated_by 
    from
        departments d1_0 
    where
        d1_0.company_id=?
2025-07-08T20:07:51.057+02:00 DEBUG 2708 --- [bika] [           main] org.hibernate.SQL                        : 
    delete 
    from
        companies 
    where
        id=?
Hibernate: 
    delete 
    from
        companies 
    where
        id=?
]]></system-out>
  </testcase>
</testsuite>